{"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNVectorStyleLayer\/predicate","interfaceLanguage":"occ"},"sections":[],"kind":"symbol","metadata":{"role":"symbol","title":"predicate","externalID":"c:objc(cs)MLNVectorStyleLayer(py)predicate","navigatorTitle":[{"kind":"identifier","text":"predicate"}],"roleHeading":"Instance Property","modules":[{"name":"MapLibre"}],"symbolKind":"property","fragments":[{"text":"predicate","kind":"identifier"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnvectorstylelayer\/predicate"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNVectorStyleLayer"]]},"abstract":[{"text":"The style layer’s predicate.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":") "},{"text":"NSPredicate","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSPredicate"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"predicate"},{"kind":"text","text":";"}],"languages":["occ"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the style layer’s predicate to include only the features in the source"},{"text":" ","type":"text"},{"type":"text","text":"layer that satisfy a condition that you define. If the style layer initially"},{"text":" ","type":"text"},{"type":"text","text":"comes from the style, its predicate corresponds to the"},{"type":"text","text":" "},{"code":"filter","type":"codeVoice"},{"type":"text","text":" "},{"text":"property in the style JSON.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the “"},{"type":"text","text":"Predicates and Expressions"},{"text":"”","type":"text"},{"type":"text","text":" "},{"type":"text","text":"guide for details about the predicate syntax supported by this class."}]},{"level":3,"type":"heading","text":"Example","anchor":"Example"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To filter the layer to include only the features whose "},{"code":"index","type":"codeVoice"},{"text":" attribute is 5","type":"text"},{"text":" ","type":"text"},{"text":"or 10 and whose ","type":"text"},{"code":"ele","type":"codeVoice"},{"text":" attribute is at least 1,500, you could create an","type":"text"},{"text":" ","type":"text"},{"code":"NSCompoundPredicate","type":"codeVoice"},{"type":"text","text":" along these lines:"}]},{"syntax":"swift","code":["let layer = MLNLineStyleLayer(identifier: \"contour\", source: terrain)","layer.sourceLayerIdentifier = \"contours\"","layer.predicate = NSPredicate(format: \"(index == 5 || index == 10) && CAST(ele, 'NSNumber') >=","1500.0\") mapView.style?.addLayer(layer)"],"type":"codeListing"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNVectorStyleLayer/predicate":{"role":"symbol","type":"topic","title":"predicate","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNVectorStyleLayer\/predicate","url":"\/documentation\/maplibre\/mlnvectorstylelayer\/predicate","abstract":[{"type":"text","text":"The style layer’s predicate."}],"fragments":[{"kind":"identifier","text":"predicate"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNVectorStyleLayer":{"abstract":[{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNVectorStyleLayer","isActive":true,"type":"reference"},{"type":"text","text":" is an abstract superclass for style layers whose content"},{"type":"text","text":" "},{"type":"text","text":"is defined by an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource"},{"text":" or ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource","isActive":true,"type":"reference"},{"type":"text","text":" object."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"MLNVectorStyleLayer"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNVectorStyleLayer","type":"topic","url":"\/documentation\/maplibre\/mlnvectorstylelayer","title":"MLNVectorStyleLayer"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeSource":{"url":"\/documentation\/maplibre\/mlnshapesource","kind":"symbol","title":"MLNShapeSource","role":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource","isActive":true},{"type":"text","text":" is a map content source that supplies vector shapes to be"},{"text":" ","type":"text"},{"type":"text","text":"shown on the map. The shapes may be instances of "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" or ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or they may be defined by local or external"},{"type":"text","text":" "},{"text":"GeoJSON","type":"text"},{"text":" code. A shape source is added to an","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNStyle","isActive":true,"type":"reference"},{"text":" object along with an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNStyle","isActive":true,"type":"reference"},{"type":"text","text":" object. The vector style"},{"type":"text","text":" "},{"type":"text","text":"layer defines the appearance of any content supplied by the shape source. You"},{"text":" ","type":"text"},{"type":"text","text":"can update a shape source by setting its "},{"code":"shape","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"URL"},{"type":"text","text":" property."}],"fragments":[{"kind":"identifier","text":"MLNShapeSource"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource"},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"title":"MapLibre","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","url":"\/documentation\/maplibre","role":"collection"}}}