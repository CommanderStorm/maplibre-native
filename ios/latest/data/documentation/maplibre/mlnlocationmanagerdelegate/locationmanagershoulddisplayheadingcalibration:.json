{"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManagerDelegate\/locationManagerShouldDisplayHeadingCalibration:","interfaceLanguage":"occ"},"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManagerDelegate"]]},"metadata":{"modules":[{"name":"MapLibre"}],"externalID":"c:objc(pl)MLNLocationManagerDelegate(im)locationManagerShouldDisplayHeadingCalibration:","role":"symbol","navigatorTitle":[{"text":"locationManagerShouldDisplayHeadingCalibration:","kind":"identifier"}],"fragments":[{"text":"- ","kind":"text"},{"text":"locationManagerShouldDisplayHeadingCalibration:","kind":"identifier"}],"title":"locationManagerShouldDisplayHeadingCalibration:","symbolKind":"method","roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"BOOL","kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL"},{"kind":"text","text":") "},{"text":"locationManagerShouldDisplayHeadingCalibration:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:Qoobjc(pl)MLNLocationManager","text":"id<MLNLocationManager>","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"internalParam","text":"manager"},{"kind":"text","text":";"}],"languages":["occ"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The location manager reporting the calibration.","type":"text"}]}],"name":"manager"}],"kind":"parameters"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Asks the delegate if the calibration alert should be displayed.","type":"text"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnlocationmanagerdelegate\/locationmanagershoulddisplayheadingcalibration:"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLocationManager":{"abstract":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","type":"reference"},{"text":" protocol defines a set of methods that a class must","type":"text"},{"type":"text","text":" "},{"type":"text","text":"implement in order to serve as the location manager of an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference","isActive":true},{"text":". A location","type":"text"},{"type":"text","text":" "},{"text":"manager is responsible for notifying the map view about location-related events,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"such as a change in the user’s location. This protocol is similar to the"},{"type":"text","text":" "},{"type":"text","text":"Core Location framework’s "},{"type":"codeVoice","code":"CLLocationManager"},{"type":"text","text":" class, but your implementation"},{"text":" ","type":"text"},{"type":"text","text":"does not need to be based on "},{"code":"CLLocationManager","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","title":"MLNLocationManager","fragments":[{"kind":"identifier","text":"MLNLocationManager"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnlocationmanager"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLocationManagerDelegate":{"fragments":[{"kind":"identifier","text":"MLNLocationManagerDelegate"}],"role":"symbol","title":"MLNLocationManagerDelegate","type":"topic","url":"\/documentation\/maplibre\/mlnlocationmanagerdelegate","abstract":[{"type":"text","text":"The "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManagerDelegate","isActive":true,"type":"reference"},{"text":" protocol defines a set of methods that respond","type":"text"},{"type":"text","text":" "},{"text":"to location updates from an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","isActive":true,"type":"reference"},{"text":" object that is serving as the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"location manager of an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference","isActive":true},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManagerDelegate"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","type":"topic","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","title":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"MLNMapView"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLocationManagerDelegate/locationManagerShouldDisplayHeadingCalibration:":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManagerDelegate\/locationManagerShouldDisplayHeadingCalibration:","role":"symbol","navigatorTitle":[{"text":"locationManagerShouldDisplayHeadingCalibration:","kind":"identifier"}],"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"locationManagerShouldDisplayHeadingCalibration:"}],"url":"\/documentation\/maplibre\/mlnlocationmanagerdelegate\/locationmanagershoulddisplayheadingcalibration:","title":"locationManagerShouldDisplayHeadingCalibration:","type":"topic","abstract":[{"type":"text","text":"Asks the delegate if the calibration alert should be displayed."}]}}}