{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"kind":"text","text":" * "},{"kind":"identifier","text":"fillOutlineColor"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"This property is only applied to the style if ","type":"text"},{"code":"fillPattern","type":"codeVoice"},{"type":"text","text":" is set to "},{"code":"nil","type":"codeVoice"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"fillAntialiased","type":"codeVoice"},{"text":" is set to an expression that evaluates to ","type":"text"},{"type":"codeVoice","code":"YES"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Otherwise, it is ignored."}],"type":"paragraph"},{"inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant "},{"code":"UIColor","type":"codeVoice"},{"text":" values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Interpolation and step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable and\/or"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}]}]}],"variants":[{"paths":["\/documentation\/maplibre\/mlnfillstylelayer\/filloutlinecolor"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer\/fillOutlineColor","interfaceLanguage":"occ"},"metadata":{"role":"symbol","fragments":[{"kind":"identifier","text":"fillOutlineColor"}],"symbolKind":"property","externalID":"c:objc(cs)MLNFillStyleLayer(py)fillOutlineColor","title":"fillOutlineColor","roleHeading":"Instance Property","navigatorTitle":[{"kind":"identifier","text":"fillOutlineColor"}],"modules":[{"name":"MapLibre"}]},"abstract":[{"type":"text","text":"The outline color of the fill. Matches the value of "},{"code":"fillColor","type":"codeVoice"},{"type":"text","text":" if unspecified."}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer"]]},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNFillStyleLayer/fillOutlineColor":{"abstract":[{"text":"The outline color of the fill. Matches the value of ","type":"text"},{"type":"codeVoice","code":"fillColor"},{"text":" if unspecified.","type":"text"}],"type":"topic","url":"\/documentation\/maplibre\/mlnfillstylelayer\/filloutlinecolor","title":"fillOutlineColor","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer\/fillOutlineColor","kind":"symbol","role":"symbol","fragments":[{"text":"fillOutlineColor","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNFillStyleLayer":{"title":"MLNFillStyleLayer","kind":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnfillstylelayer","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer","fragments":[{"text":"MLNFillStyleLayer","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer","isActive":true},{"text":" is a style layer that renders one or more filled (and","type":"text"},{"text":" ","type":"text"},{"text":"optionally stroked) polygons on the map.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","title":"MapLibre","type":"topic","url":"\/documentation\/maplibre"}}}