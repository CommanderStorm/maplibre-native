{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"fillColor"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"UIColor.blackColor"},{"text":". Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This property is only applied to the style if ","type":"text"},{"code":"fillPattern","type":"codeVoice"},{"type":"text","text":" is set to "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Otherwise, it is ignored."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"type":"paragraph","inlineContent":[{"text":"Constant ","type":"text"},{"type":"codeVoice","code":"UIColor"},{"text":" values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"text":"Interpolation and step functions applied to the ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable and\/or","type":"text"},{"text":" ","type":"text"},{"text":"feature attributes","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer\/fillColor"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"navigatorTitle":[{"text":"fillColor","kind":"identifier"}],"fragments":[{"text":"fillColor","kind":"identifier"}],"role":"symbol","modules":[{"name":"MapLibre"}],"title":"fillColor","symbolKind":"property","externalID":"c:objc(cs)MLNFillStyleLayer(py)fillColor","roleHeading":"Instance Property"},"abstract":[{"type":"text","text":"The color of the filled part of this layer."}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnfillstylelayer\/fillcolor"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer"]]},"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNFillStyleLayer/fillColor":{"abstract":[{"type":"text","text":"The color of the filled part of this layer."}],"fragments":[{"text":"fillColor","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer\/fillColor","role":"symbol","url":"\/documentation\/maplibre\/mlnfillstylelayer\/fillcolor","title":"fillColor","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNFillStyleLayer":{"title":"MLNFillStyleLayer","role":"symbol","kind":"symbol","fragments":[{"text":"MLNFillStyleLayer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer","url":"\/documentation\/maplibre\/mlnfillstylelayer","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer","type":"reference","isActive":true},{"text":" is a style layer that renders one or more filled (and","type":"text"},{"type":"text","text":" "},{"text":"optionally stroked) polygons on the map.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre"}}}