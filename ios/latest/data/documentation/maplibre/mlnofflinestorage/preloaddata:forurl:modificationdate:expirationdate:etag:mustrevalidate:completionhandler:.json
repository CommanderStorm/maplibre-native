{"sections":[],"metadata":{"title":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","role":"symbol","roleHeading":"Instance Method","externalID":"c:objc(cs)MLNOfflineStorage(im)preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","symbolKind":"method","navigatorTitle":[{"text":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","kind":"identifier"}],"fragments":[{"text":"- ","kind":"text"},{"text":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","kind":"identifier"}],"modules":[{"name":"MapLibre"}]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/preloaddata:forurl:modificationdate:expirationdate:etag:mustrevalidate:completionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"preloadData:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSData","preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"data"},{"text":" ","kind":"text"},{"text":"forURL:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSURL","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSURL"},{"text":" *) ","kind":"text"},{"text":"url","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"modificationDate:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSDate","kind":"typeIdentifier","text":"NSDate"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"modified"},{"text":" ","kind":"text"},{"text":"expirationDate:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSDate","text":"NSDate","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"expires"},{"text":" ","kind":"text"},{"text":"eTag:","kind":"identifier"},{"kind":"text","text":"("},{"text":"NSString","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSString"},{"text":" *) ","kind":"text"},{"text":"eTag","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"mustRevalidate:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BOOL","kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"mustRevalidate"},{"text":" ","kind":"text"},{"kind":"identifier","text":"completionHandler:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:BFv(#*$objc(cs)NSURL#*$objc(cs)NSError)","text":"void (^)(NSURL *, NSError *)","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"internalParam","text":"completion"},{"kind":"text","text":";"}]}]},{"parameters":[{"name":"data","content":[{"inlineContent":[{"type":"text","text":"Response data to store for this resource. The data is expected to"},{"type":"text","text":" "},{"text":"be uncompressed; internally, the cache will compress data as necessary.","type":"text"}],"type":"paragraph"}]},{"name":"url","content":[{"type":"paragraph","inlineContent":[{"text":"The URL at which the data can normally be found.","type":"text"}]}]},{"name":"modified","content":[{"type":"paragraph","inlineContent":[{"text":"The date the resource was last modified.","type":"text"}]}]},{"name":"expires","content":[{"inlineContent":[{"text":"The date after which the resource is no longer valid.","type":"text"}],"type":"paragraph"}]},{"name":"eTag","content":[{"type":"paragraph","inlineContent":[{"text":"An HTTP entity tag.","type":"text"}]}]},{"name":"mustRevalidate","content":[{"type":"paragraph","inlineContent":[{"text":"A Boolean value indicating whether the data is still","type":"text"},{"type":"text","text":" "},{"type":"text","text":"usable past the expiration date."}]}]},{"name":"completion","content":[{"inlineContent":[{"type":"text","text":"The completion handler to call once the data has been"},{"type":"text","text":" "},{"text":"preloaded. This handler is executed asynchronously on the main queue.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is asynchronous. The data is available for in-progress requests as"},{"text":" ","type":"text"},{"type":"text","text":"soon as the completion handler is called."}]},{"inlineContent":[{"type":"text","text":"This method is asynchronous; the data may not be immediately available for"},{"type":"text","text":" "},{"text":"in-progress requests, though subsequent requests should have access to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"cached data."}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Inserts the provided resource into the ambient cache, calling a completion"},{"type":"text","text":" "},{"text":"handler when finished.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","type":"topic","kind":"symbol","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:":{"url":"\/documentation\/maplibre\/mlnofflinestorage\/preloaddata:forurl:modificationdate:expirationdate:etag:mustrevalidate:completionhandler:","title":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","role":"symbol","abstract":[{"text":"Inserts the provided resource into the ambient cache, calling a completion","type":"text"},{"type":"text","text":" "},{"type":"text","text":"handler when finished."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:"}],"kind":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"type":"topic","fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"abstract":[{"type":"text","text":"MLNOfflineStorage implements a singleton (shared object) that manages offline"},{"type":"text","text":" "},{"type":"text","text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,"},{"type":"text","text":" "},{"type":"text","text":"reflecting the fact that offline resources are stored in a database. The shared"},{"type":"text","text":" "},{"type":"text","text":"object maintains a canonical collection of offline packs in its "},{"code":"packs","type":"codeVoice"},{"text":" property.","type":"text"}],"url":"\/documentation\/maplibre\/mlnofflinestorage","title":"MLNOfflineStorage","role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"}}}