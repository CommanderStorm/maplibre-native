{"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":" (^","kind":"text"},{"kind":"text","text":")("},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"kind":"text","text":" * "},{"kind":"internalParam","text":"error"},{"kind":"text","text":")) "},{"kind":"internalParam","text":"completion"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The completion handler to call once the ambient cache has","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"been revalidated. This handler is executed asynchronously on the main queue."}],"type":"paragraph"}],"name":"completion"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"text":"This is recommended over clearing the cache or resetting the database","type":"text"},{"type":"text","text":" "},{"type":"text","text":"because valid local tiles will not be downloaded again."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Resources shared with offline packs will not be affected by this method."}]}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:"},"kind":"symbol","abstract":[{"type":"text","text":"Invalidates the ambient cache. This method checks that the tiles in the"},{"type":"text","text":" "},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"type":"text","text":" "},{"type":"text","text":"those on the server, they are re-downloaded."}],"metadata":{"modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNOfflineStorage(im)invalidateAmbientCacheWithCompletionHandler:","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"- ","kind":"text"},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"title":"invalidateAmbientCacheWithCompletionHandler:","navigatorTitle":[{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:"]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidateAmbientCacheWithCompletionHandler:":{"title":"invalidateAmbientCacheWithCompletionHandler:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","type":"topic","kind":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:","abstract":[{"type":"text","text":"Invalidates the ambient cache. This method checks that the tiles in the"},{"type":"text","text":" "},{"text":"ambient cache match those from the server. If the local tiles do not match","type":"text"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"title":"MLNOfflineStorage","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnofflinestorage","type":"topic","role":"symbol","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"text":" ","type":"text"},{"text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,","type":"text"},{"type":"text","text":" "},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"type":"text","text":" "},{"type":"text","text":"object maintains a canonical collection of offline packs in its "},{"type":"codeVoice","code":"packs"},{"text":" property.","type":"text"}]}}}