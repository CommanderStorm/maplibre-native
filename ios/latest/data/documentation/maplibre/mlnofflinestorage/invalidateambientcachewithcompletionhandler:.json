{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"void","preciseIdentifier":"c:v"},{"kind":"text","text":" (^"},{"text":")(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError","text":"NSError"},{"text":" * ","kind":"text"},{"kind":"internalParam","text":"error"},{"kind":"text","text":")) "},{"kind":"internalParam","text":"completion"},{"text":";","kind":"text"}],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The completion handler to call once the ambient cache has","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"been revalidated. This handler is executed asynchronously on the main queue."}]}],"name":"completion"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This is recommended over clearing the cache or resetting the database","type":"text"},{"type":"text","text":" "},{"text":"because valid local tiles will not be downloaded again.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Resources shared with offline packs will not be affected by this method.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","sections":[],"abstract":[{"text":"Invalidates the ambient cache. This method checks that the tiles in the","type":"text"},{"text":" ","type":"text"},{"text":"ambient cache match those from the server. If the local tiles do not match","type":"text"},{"type":"text","text":" "},{"type":"text","text":"those on the server, they are re-downloaded."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNOfflineStorage(im)invalidateAmbientCacheWithCompletionHandler:","navigatorTitle":[{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"roleHeading":"Instance Method","title":"invalidateAmbientCacheWithCompletionHandler:","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","interfaceLanguage":"occ"},"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"url":"\/documentation\/maplibre\/mlnofflinestorage","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,"},{"type":"text","text":" "},{"type":"text","text":"reflecting the fact that offline resources are stored in a database. The shared"},{"text":" ","type":"text"},{"type":"text","text":"object maintains a canonical collection of offline packs in its "},{"type":"codeVoice","code":"packs"},{"type":"text","text":" property."}],"kind":"symbol","title":"MLNOfflineStorage","role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"MLNOfflineStorage"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","title":"MapLibre","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidateAmbientCacheWithCompletionHandler:":{"url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:","navigatorTitle":[{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"abstract":[{"text":"Invalidates the ambient cache. This method checks that the tiles in the","type":"text"},{"type":"text","text":" "},{"text":"ambient cache match those from the server. If the local tiles do not match","type":"text"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}],"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","role":"symbol","title":"invalidateAmbientCacheWithCompletionHandler:","type":"topic"}}}