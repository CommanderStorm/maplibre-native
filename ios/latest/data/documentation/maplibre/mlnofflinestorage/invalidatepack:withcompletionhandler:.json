{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNOfflineStorage(im)invalidatePack:withCompletionHandler:","title":"invalidatePack:withCompletionHandler:","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"invalidatePack:withCompletionHandler:"}],"navigatorTitle":[{"kind":"identifier","text":"invalidatePack:withCompletionHandler:"}]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidatepack:withcompletionhandler:"]}],"abstract":[{"type":"text","text":"Invalidates the specified offline pack. This method checks that the tiles"},{"text":" ","type":"text"},{"text":"in the specified offline pack match those from the server. Local tiles that","type":"text"},{"type":"text","text":" "},{"text":"do not match the latest version on the server are updated.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidatePack:withCompletionHandler:","interfaceLanguage":"occ"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"text":") ","kind":"text"},{"kind":"identifier","text":"invalidatePack:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNOfflinePack","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflinePack","kind":"typeIdentifier","text":"MLNOfflinePack"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"pack"},{"kind":"text","text":" "},{"text":"withCompletionHandler:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"kind":"text","text":" (^"},{"text":")(","kind":"text"},{"text":"NSError","preciseIdentifier":"c:objc(cs)NSError","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"kind":"internalParam","text":""},{"kind":"text","text":")) "},{"kind":"internalParam","text":"completion"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}],"kind":"declarations"},{"parameters":[{"name":"pack","content":[{"inlineContent":[{"text":"The offline pack to be invalidated.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The completion handler to call once the pack has been"},{"type":"text","text":" "},{"type":"text","text":"removed. This handler is executed asynchronously on the main queue."}],"type":"paragraph"}],"name":"completion"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"This is more efficient than deleting the offline pack and downloading it"},{"text":" ","type":"text"},{"text":"again. If the data stored locally matches that on the server, new data will","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"not be downloaded."}],"type":"paragraph"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidatePack:withCompletionHandler:":{"fragments":[{"text":"- ","kind":"text"},{"text":"invalidatePack:withCompletionHandler:","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidatePack:withCompletionHandler:","abstract":[{"text":"Invalidates the specified offline pack. This method checks that the tiles","type":"text"},{"text":" ","type":"text"},{"text":"in the specified offline pack match those from the server. Local tiles that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"do not match the latest version on the server are updated."}],"url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidatepack:withcompletionhandler:","navigatorTitle":[{"text":"invalidatePack:withCompletionHandler:","kind":"identifier"}],"title":"invalidatePack:withCompletionHandler:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflinePack":{"abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflinePack"},{"type":"text","text":" represents a collection of resources necessary for viewing"},{"text":" ","type":"text"},{"text":"a region offline to a local database.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"MLNOfflinePack","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflinePack","url":"\/documentation\/maplibre\/mlnofflinepack","title":"MLNOfflinePack"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","type":"topic","kind":"symbol","role":"symbol","title":"MLNOfflineStorage","fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnofflinestorage","abstract":[{"type":"text","text":"MLNOfflineStorage implements a singleton (shared object) that manages offline"},{"text":" ","type":"text"},{"type":"text","text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,"},{"type":"text","text":" "},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"type":"text","text":" "},{"type":"text","text":"object maintains a canonical collection of offline packs in its "},{"type":"codeVoice","code":"packs"},{"type":"text","text":" property."}]},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","kind":"symbol","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]}}}