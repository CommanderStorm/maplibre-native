{"metadata":{"navigatorTitle":[{"text":"databaseURL","kind":"identifier"}],"roleHeading":"Instance Property","title":"databaseURL","role":"symbol","symbolKind":"property","externalID":"c:objc(cs)MLNOfflineStorage(py)databaseURL","fragments":[{"kind":"identifier","text":"databaseURL"}],"modules":[{"name":"MapLibre"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":", "},{"kind":"keyword","text":"copy"},{"kind":"text","text":", "},{"text":"readonly","kind":"keyword"},{"text":") ","kind":"text"},{"kind":"typeIdentifier","text":"NSURL","preciseIdentifier":"c:objc(cs)NSURL"},{"kind":"text","text":" * "},{"text":"databaseURL","kind":"identifier"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"To customize this path, specify the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MLNOfflineStorageDatabasePath"},{"text":" key in Info.plist, see ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Info.plist_Keys","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]}],"abstract":[{"text":"The file URL at which offline packs and the ambient cache are stored.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnofflinestorage\/databaseurl"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/databaseURL"},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","kind":"symbol","type":"topic","title":"MapLibre","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"role":"symbol","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"type":"text","text":" "},{"type":"text","text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,"},{"text":" ","type":"text"},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"type":"text","text":" "},{"text":"object maintains a canonical collection of offline packs in its ","type":"text"},{"type":"codeVoice","code":"packs"},{"type":"text","text":" property."}],"url":"\/documentation\/maplibre\/mlnofflinestorage","title":"MLNOfflineStorage","type":"topic","fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/databaseURL":{"role":"symbol","title":"databaseURL","kind":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/databaseURL","url":"\/documentation\/maplibre\/mlnofflinestorage\/databaseurl","fragments":[{"text":"databaseURL","kind":"identifier"}],"abstract":[{"text":"The file URL at which offline packs and the ambient cache are stored.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/Info.plist_Keys":{"kind":"article","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Info.plist_Keys","url":"\/documentation\/maplibre-native-for-ios\/info.plist_keys","title":"Info.plist Keys","abstract":[{"type":"text","text":"MapLibre Native for iOS supports custom "},{"code":"Info.plist","type":"codeVoice"},{"type":"text","text":" keys in your application in order to configure various settings."}],"type":"topic","role":"article"}}}