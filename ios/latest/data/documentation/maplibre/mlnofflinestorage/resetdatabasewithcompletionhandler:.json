{"abstract":[{"type":"text","text":"Deletes the existing database, which includes both the ambient cache and"},{"type":"text","text":" "},{"text":"offline packs, then reinitializes it.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","text":"void","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"},{"kind":"text","text":"("},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":" (^","kind":"text"},{"text":")(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSError","kind":"typeIdentifier","text":"NSError"},{"kind":"text","text":" * "},{"kind":"internalParam","text":"error"},{"kind":"text","text":")) "},{"text":"completion","kind":"internalParam"},{"kind":"text","text":";"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"completion","content":[{"inlineContent":[{"type":"text","text":"The completion handler to call once the pack has database has"},{"type":"text","text":" "},{"text":"been reset. This handler is executed asynchronously on the main queue.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"You typically do not need to call this method.","type":"text"}]}]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnofflinestorage\/resetdatabasewithcompletionhandler:"]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/resetDatabaseWithCompletionHandler:","interfaceLanguage":"occ"},"metadata":{"navigatorTitle":[{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"}],"externalID":"c:objc(cs)MLNOfflineStorage(im)resetDatabaseWithCompletionHandler:","title":"resetDatabaseWithCompletionHandler:","symbolKind":"method","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"resetDatabaseWithCompletionHandler:"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"MapLibre"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/resetDatabaseWithCompletionHandler:":{"abstract":[{"type":"text","text":"Deletes the existing database, which includes both the ambient cache and"},{"type":"text","text":" "},{"text":"offline packs, then reinitializes it.","type":"text"}],"url":"\/documentation\/maplibre\/mlnofflinestorage\/resetdatabasewithcompletionhandler:","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"resetDatabaseWithCompletionHandler:"}],"title":"resetDatabaseWithCompletionHandler:","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/resetDatabaseWithCompletionHandler:","role":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","title":"MapLibre","type":"topic","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","url":"\/documentation\/maplibre\/mlnofflinestorage","title":"MLNOfflineStorage","kind":"symbol","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,"},{"type":"text","text":" "},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"type":"text","text":" "},{"text":"object maintains a canonical collection of offline packs in its ","type":"text"},{"type":"codeVoice","code":"packs"},{"type":"text","text":" property."}],"fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"type":"topic","role":"symbol"}}}