{"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"text":") ","kind":"text"},{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:v","text":"void","kind":"typeIdentifier"},{"kind":"text","text":" (^"},{"kind":"text","text":")("},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"text":" * ","kind":"text"},{"kind":"internalParam","text":"error"},{"text":")) ","kind":"text"},{"kind":"internalParam","text":"completion"},{"text":";","kind":"text"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The completion handler to call once the pack has database has","type":"text"},{"text":" ","type":"text"},{"text":"been reset. This handler is executed asynchronously on the main queue.","type":"text"}],"type":"paragraph"}],"name":"completion"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"You typically do not need to call this method.","type":"text"}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Deletes the existing database, which includes both the ambient cache and"},{"type":"text","text":" "},{"type":"text","text":"offline packs, then reinitializes it."}],"metadata":{"role":"symbol","roleHeading":"Instance Method","title":"resetDatabaseWithCompletionHandler:","navigatorTitle":[{"kind":"identifier","text":"resetDatabaseWithCompletionHandler:"}],"externalID":"c:objc(cs)MLNOfflineStorage(im)resetDatabaseWithCompletionHandler:","symbolKind":"method","fragments":[{"text":"- ","kind":"text"},{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"}],"modules":[{"name":"MapLibre"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/resetdatabasewithcompletionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/resetDatabaseWithCompletionHandler:","interfaceLanguage":"occ"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/resetDatabaseWithCompletionHandler:":{"role":"symbol","kind":"symbol","title":"resetDatabaseWithCompletionHandler:","navigatorTitle":[{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"}],"abstract":[{"text":"Deletes the existing database, which includes both the ambient cache and","type":"text"},{"type":"text","text":" "},{"text":"offline packs, then reinitializes it.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/resetDatabaseWithCompletionHandler:","url":"\/documentation\/maplibre\/mlnofflinestorage\/resetdatabasewithcompletionhandler:","type":"topic","fragments":[{"text":"- ","kind":"text"},{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","url":"\/documentation\/maplibre","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"title":"MLNOfflineStorage","abstract":[{"type":"text","text":"MLNOfflineStorage implements a singleton (shared object) that manages offline"},{"type":"text","text":" "},{"text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"reflecting the fact that offline resources are stored in a database. The shared"},{"text":" ","type":"text"},{"text":"object maintains a canonical collection of offline packs in its ","type":"text"},{"type":"codeVoice","code":"packs"},{"type":"text","text":" property."}],"role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlnofflinestorage"}}}