{"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/resetdatabasewithcompletionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"modules":[{"name":"MapLibre"}],"role":"symbol","title":"resetDatabaseWithCompletionHandler:","symbolKind":"method","navigatorTitle":[{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"}],"externalID":"c:objc(cs)MLNOfflineStorage(im)resetDatabaseWithCompletionHandler:","fragments":[{"text":"- ","kind":"text"},{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"}],"roleHeading":"Instance Method"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"kind":"text","text":") "},{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":" (^","kind":"text"},{"text":")(","kind":"text"},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"text":" * ","kind":"text"},{"text":"error","kind":"internalParam"},{"kind":"text","text":")) "},{"text":"completion","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The completion handler to call once the pack has database has"},{"type":"text","text":" "},{"type":"text","text":"been reset. This handler is executed asynchronously on the main queue."}]}],"name":"completion"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You typically do not need to call this method."}]}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/resetDatabaseWithCompletionHandler:","interfaceLanguage":"occ"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"Deletes the existing database, which includes both the ambient cache and"},{"type":"text","text":" "},{"text":"offline packs, then reinitializes it.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","url":"\/documentation\/maplibre","type":"topic","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/resetDatabaseWithCompletionHandler:":{"type":"topic","title":"resetDatabaseWithCompletionHandler:","fragments":[{"text":"- ","kind":"text"},{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/resetDatabaseWithCompletionHandler:","role":"symbol","navigatorTitle":[{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"}],"abstract":[{"type":"text","text":"Deletes the existing database, which includes both the ambient cache and"},{"type":"text","text":" "},{"type":"text","text":"offline packs, then reinitializes it."}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnofflinestorage\/resetdatabasewithcompletionhandler:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","url":"\/documentation\/maplibre\/mlnofflinestorage","title":"MLNOfflineStorage","abstract":[{"type":"text","text":"MLNOfflineStorage implements a singleton (shared object) that manages offline"},{"type":"text","text":" "},{"type":"text","text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,"},{"type":"text","text":" "},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"text":" ","type":"text"},{"text":"object maintains a canonical collection of offline packs in its ","type":"text"},{"type":"codeVoice","code":"packs"},{"type":"text","text":" property."}],"kind":"symbol","fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"type":"topic"}}}