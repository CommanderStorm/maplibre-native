{"metadata":{"title":"setMaximumAmbientCacheSize:withCompletionHandler:","role":"symbol","externalID":"c:objc(cs)MLNOfflineStorage(im)setMaximumAmbientCacheSize:withCompletionHandler:","modules":[{"name":"MapLibre"}],"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"setMaximumAmbientCacheSize:withCompletionHandler:"}],"roleHeading":"Instance Method","navigatorTitle":[{"kind":"identifier","text":"setMaximumAmbientCacheSize:withCompletionHandler:"}],"symbolKind":"method"},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","text":"void","preciseIdentifier":"c:v"},{"text":") ","kind":"text"},{"kind":"identifier","text":"setMaximumAmbientCacheSize:"},{"kind":"text","text":"("},{"text":"NSUInteger","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSUInteger"},{"kind":"text","text":") "},{"text":"cacheSize","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"withCompletionHandler:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"text":" (^","kind":"text"},{"text":")(","kind":"text"},{"kind":"typeIdentifier","text":"NSError","preciseIdentifier":"c:objc(cs)NSError"},{"kind":"text","text":" * "},{"kind":"internalParam","text":"error"},{"kind":"text","text":")) "},{"text":"completion","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"name":"cacheSize","content":[{"inlineContent":[{"type":"text","text":"The maximum size in bytes for the ambient cache."}],"type":"paragraph"}]},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"text":"The completion handler to call once the maximum ambient cache","type":"text"},{"type":"text","text":" "},{"type":"text","text":"size has been set. This handler is executed synchronously on the main queue."}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method does not limit the space available to offline packs, and data in"},{"type":"text","text":" "},{"text":"offline packs does not count towards this limit. If you set the maximum ambient","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"cache size to 30 MB then download 20 MB of offline packs, 30 MB will remain"},{"type":"text","text":" "},{"text":"available for the ambient cache.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This method should be called before the map and map style have been loaded.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This method is potentially expensive, as the database will trim cached data","type":"text"},{"type":"text","text":" "},{"text":"in order to prevent the ambient cache from being larger than the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified amount."}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/setMaximumAmbientCacheSize:withCompletionHandler:","interfaceLanguage":"occ"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"abstract":[{"text":"Sets the maximum ambient cache size in bytes. The default maximum cache","type":"text"},{"text":" ","type":"text"},{"text":"size is 50 MB. To disable ambient caching, set the maximum ambient cache size","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to "},{"code":"0","type":"codeVoice"},{"text":". Setting the maximum ambient cache size does not impact the maximum size","type":"text"},{"text":" ","type":"text"},{"text":"of offline packs.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnofflinestorage\/setmaximumambientcachesize:withcompletionhandler:"]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"role":"collection","kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/setMaximumAmbientCacheSize:withCompletionHandler:":{"kind":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnofflinestorage\/setmaximumambientcachesize:withcompletionhandler:","fragments":[{"text":"- ","kind":"text"},{"text":"setMaximumAmbientCacheSize:withCompletionHandler:","kind":"identifier"}],"title":"setMaximumAmbientCacheSize:withCompletionHandler:","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/setMaximumAmbientCacheSize:withCompletionHandler:","abstract":[{"type":"text","text":"Sets the maximum ambient cache size in bytes. The default maximum cache"},{"text":" ","type":"text"},{"text":"size is 50 MB. To disable ambient caching, set the maximum ambient cache size","type":"text"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":". Setting the maximum ambient cache size does not impact the maximum size"},{"text":" ","type":"text"},{"text":"of offline packs.","type":"text"}],"navigatorTitle":[{"text":"setMaximumAmbientCacheSize:withCompletionHandler:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"type":"topic","title":"MLNOfflineStorage","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","role":"symbol","url":"\/documentation\/maplibre\/mlnofflinestorage","fragments":[{"kind":"identifier","text":"MLNOfflineStorage"}],"kind":"symbol","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"type":"text","text":" "},{"type":"text","text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,"},{"text":" ","type":"text"},{"type":"text","text":"reflecting the fact that offline resources are stored in a database. The shared"},{"type":"text","text":" "},{"text":"object maintains a canonical collection of offline packs in its ","type":"text"},{"code":"packs","type":"codeVoice"},{"text":" property.","type":"text"}]}}}