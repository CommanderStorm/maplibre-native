{"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineWidth","interfaceLanguage":"occ"},"kind":"symbol","metadata":{"title":"lineWidth","roleHeading":"Instance Property","fragments":[{"text":"lineWidth","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"lineWidth"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineWidth","modules":[{"name":"MapLibre"}],"role":"symbol","symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"sections":[],"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/linewidth"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":") "},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"kind":"text","text":" * "},{"kind":"identifier","text":"lineWidth"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This property is measured in points.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"text":" ","type":"text"},{"type":"codeVoice","code":"1"},{"text":". Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"type":"paragraph","inlineContent":[{"text":"Constant numeric values no less than 0","type":"text"},{"text":" ","type":"text"},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable and\/or"},{"type":"text","text":" "},{"text":"feature attributes","type":"text"}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Stroke thickness."}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineWidth":{"title":"lineWidth","fragments":[{"kind":"identifier","text":"lineWidth"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer\/linewidth","kind":"symbol","abstract":[{"type":"text","text":"Stroke thickness."}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineWidth","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"title":"MapLibre","type":"topic","role":"collection","kind":"symbol","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"kind":"symbol","role":"symbol","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"type":"text","text":"polylines on the map."}],"url":"\/documentation\/maplibre\/mlnlinestylelayer","type":"topic","title":"MLNLineStyleLayer"}}}