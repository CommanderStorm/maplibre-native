{"metadata":{"role":"symbol","symbolKind":"property","fragments":[{"text":"lineDashPattern","kind":"identifier"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineDashPattern","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"text":"lineDashPattern","kind":"identifier"}],"title":"lineDashPattern","roleHeading":"Instance Property"},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineDashPattern"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression","kind":"typeIdentifier"},{"kind":"text","text":" * "},{"text":"lineDashPattern","kind":"identifier"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This property is measured in line widths.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property is only applied to the style if "},{"type":"codeVoice","code":"linePattern"},{"text":" is set to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Otherwise, it is ignored."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This attribute corresponds to the "},{"text":"line-dasharray","type":"text"},{"type":"text","text":" "},{"type":"text","text":"layout property in the MapLibre Style Spec."}]},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant array values no less than 0"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"text":"Step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable"}]},{"type":"paragraph","inlineContent":[{"text":"This property does not support applying interpolation functions to the","type":"text"},{"type":"text","text":" "},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable or applying interpolation or step functions to feature","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"attributes."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"abstract":[{"text":"Specifies the lengths of the alternating dashes and gaps that form the dash","type":"text"},{"type":"text","text":" "},{"type":"text","text":"pattern. The lengths are later scaled by the line width. To convert a dash"},{"text":" ","type":"text"},{"text":"length to points, multiply the length by the current line width. Note that","type":"text"},{"type":"text","text":" "},{"text":"GeoJSON sources with ","type":"text"},{"type":"codeVoice","code":"lineMetrics: true"},{"type":"text","text":" specified won’t render dashed lines to"},{"text":" ","type":"text"},{"type":"text","text":"the expected scale. Also note that zoom-dependent expressions will be evaluated"},{"type":"text","text":" "},{"text":"only at integer zoom levels.","type":"text"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/linedashpattern"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","role":"collection","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"reference","isActive":true},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"type":"text","text":"polylines on the map."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"topic","url":"\/documentation\/maplibre\/mlnlinestylelayer","fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}],"title":"MLNLineStyleLayer"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineDashPattern":{"abstract":[{"type":"text","text":"Specifies the lengths of the alternating dashes and gaps that form the dash"},{"text":" ","type":"text"},{"type":"text","text":"pattern. The lengths are later scaled by the line width. To convert a dash"},{"type":"text","text":" "},{"text":"length to points, multiply the length by the current line width. Note that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"GeoJSON sources with "},{"code":"lineMetrics: true","type":"codeVoice"},{"type":"text","text":" specified won’t render dashed lines to"},{"text":" ","type":"text"},{"text":"the expected scale. Also note that zoom-dependent expressions will be evaluated","type":"text"},{"type":"text","text":" "},{"type":"text","text":"only at integer zoom levels."}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineDashPattern","fragments":[{"text":"lineDashPattern","kind":"identifier"}],"kind":"symbol","title":"lineDashPattern","url":"\/documentation\/maplibre\/mlnlinestylelayer\/linedashpattern","type":"topic"}}}