{"metadata":{"symbolKind":"property","fragments":[{"kind":"identifier","text":"lineOpacity"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","roleHeading":"Instance Property","navigatorTitle":[{"kind":"identifier","text":"lineOpacity"}],"role":"symbol","modules":[{"name":"MapLibre"}],"title":"lineOpacity"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"},"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"preciseIdentifier":"c:objc(cs)NSExpression","kind":"typeIdentifier","text":"NSExpression"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"lineOpacity"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"text":". Set this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" to reset it to the default value."}]},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"type":"text","text":" "},{"text":"Variable assignments and references to assigned variables","type":"text"},{"type":"text","text":" "},{"text":"Interpolation and step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable and\/or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"abstract":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"type":"text","text":"polylines on the map."}],"type":"topic","url":"\/documentation\/maplibre\/mlnlinestylelayer","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","title":"MLNLineStyleLayer","role":"symbol","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","type":"topic","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"title":"lineOpacity","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","fragments":[{"text":"lineOpacity","kind":"identifier"}],"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","type":"topic","kind":"symbol"}}}