{"kind":"symbol","identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"},"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"metadata":{"title":"lineOpacity","fragments":[{"text":"lineOpacity","kind":"identifier"}],"roleHeading":"Instance Property","role":"symbol","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","symbolKind":"property"},"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"kind":"typeIdentifier","text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"lineOpacity"},{"kind":"text","text":";"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"type":"text","text":" "},{"code":"1","type":"codeVoice"},{"text":". Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"type":"text","text":" "},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"text":"Interpolation and step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable and\/or"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","url":"\/documentation\/maplibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"topic","fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}],"title":"MLNLineStyleLayer","url":"\/documentation\/maplibre\/mlnlinestylelayer","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true,"type":"reference"},{"type":"text","text":" is a style layer that renders one or more stroked"},{"text":" ","type":"text"},{"text":"polylines on the map.","type":"text"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"kind":"symbol","fragments":[{"kind":"identifier","text":"lineOpacity"}],"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","title":"lineOpacity","role":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","type":"topic"}}}