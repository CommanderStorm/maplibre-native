{"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"symbolKind":"property","fragments":[{"text":"lineOpacity","kind":"identifier"}],"navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"roleHeading":"Instance Property","title":"lineOpacity","role":"symbol","modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"sections":[],"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression"},{"kind":"text","text":" * "},{"text":"lineOpacity","kind":"identifier"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"text":" ","type":"text"},{"code":"1","type":"codeVoice"},{"type":"text","text":". Set this property to "},{"type":"codeVoice","code":"nil"},{"text":" to reset it to the default value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"text":"Interpolation and step functions applied to the ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable and\/or","type":"text"},{"type":"text","text":" "},{"text":"feature attributes","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"type":"topic","role":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","kind":"symbol","abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},{"text":" is a style layer that renders one or more stroked","type":"text"},{"text":" ","type":"text"},{"text":"polylines on the map.","type":"text"}],"title":"MLNLineStyleLayer"},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","role":"collection","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","type":"topic","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"fragments":[{"text":"lineOpacity","kind":"identifier"}],"title":"lineOpacity","kind":"symbol","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"}}}