{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"lineOpacity"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"type":"text","text":" "},{"code":"1","type":"codeVoice"},{"text":". Set this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" to reset it to the default value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"text":" ","type":"text"},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"text":"Interpolation and step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable and\/or","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"feature attributes"}]}],"kind":"content"}],"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"sections":[],"metadata":{"symbolKind":"property","roleHeading":"Instance Property","role":"symbol","title":"lineOpacity","modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","fragments":[{"text":"lineOpacity","kind":"identifier"}],"navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","type":"topic","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"kind":"symbol","title":"MLNLineStyleLayer","role":"symbol","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"reference","isActive":true},{"text":" is a style layer that renders one or more stroked","type":"text"},{"text":" ","type":"text"},{"text":"polylines on the map.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"type":"topic","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"fragments":[{"text":"lineOpacity","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","kind":"symbol","title":"lineOpacity","role":"symbol"}}}