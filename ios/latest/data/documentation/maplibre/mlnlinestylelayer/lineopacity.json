{"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"lineOpacity"}],"modules":[{"name":"MapLibre"}],"roleHeading":"Instance Property","role":"symbol","fragments":[{"kind":"identifier","text":"lineOpacity"}],"symbolKind":"property","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","title":"lineOpacity"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"lineOpacity"},{"text":";","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"type":"text","text":". Set this property to "},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"text":" ","type":"text"},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable and\/or","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"feature attributes"}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"fragments":[{"kind":"identifier","text":"lineOpacity"}],"type":"topic","title":"lineOpacity","role":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","url":"\/documentation\/maplibre","title":"MapLibre","type":"topic","role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"url":"\/documentation\/maplibre\/mlnlinestylelayer","role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"topic","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true},{"type":"text","text":" is a style layer that renders one or more stroked"},{"text":" ","type":"text"},{"text":"polylines on the map.","type":"text"}],"title":"MLNLineStyleLayer","fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}]}}}