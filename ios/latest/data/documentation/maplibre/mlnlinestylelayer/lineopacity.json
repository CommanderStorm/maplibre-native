{"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"},"metadata":{"symbolKind":"property","navigatorTitle":[{"kind":"identifier","text":"lineOpacity"}],"fragments":[{"text":"lineOpacity","kind":"identifier"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Property","title":"lineOpacity","role":"symbol"},"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression","kind":"typeIdentifier"},{"kind":"text","text":" * "},{"text":"lineOpacity","kind":"identifier"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"1"},{"text":". Set this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"type":"text","text":" "},{"text":"Interpolation and step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable and\/or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}]}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","type":"topic","role":"symbol","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"kind":"symbol","fragments":[{"text":"lineOpacity","kind":"identifier"}],"title":"lineOpacity"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}],"title":"MLNLineStyleLayer","abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"text":"polylines on the map.","type":"text"}],"type":"topic","url":"\/documentation\/maplibre\/mlnlinestylelayer","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","type":"topic","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]}}}