{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"kind":"text","text":" * "},{"text":"lineOpacity","kind":"identifier"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"type":"text","text":". Set this property to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}]},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"text":"Interpolation and step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable and\/or","type":"text"},{"text":" ","type":"text"},{"text":"feature attributes","type":"text"}]}],"kind":"content"}],"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"role":"symbol","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","roleHeading":"Instance Property","modules":[{"name":"MapLibre"}],"title":"lineOpacity","navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"fragments":[{"kind":"identifier","text":"lineOpacity"}],"symbolKind":"property"},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"role":"symbol","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"reference","isActive":true},{"text":" is a style layer that renders one or more stroked","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"polylines on the map."}],"title":"MLNLineStyleLayer","url":"\/documentation\/maplibre\/mlnlinestylelayer","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"topic","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"role":"symbol","kind":"symbol","title":"lineOpacity","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","fragments":[{"text":"lineOpacity","kind":"identifier"}],"type":"topic","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","type":"topic","role":"collection","kind":"symbol","title":"MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]}}}