{"metadata":{"role":"symbol","symbolKind":"property","roleHeading":"Instance Property","fragments":[{"text":"lineOpacity","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"lineOpacity"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","title":"lineOpacity","modules":[{"name":"MapLibre"}]},"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"text":" * ","kind":"text"},{"text":"lineOpacity","kind":"identifier"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"text":" ","type":"text"},{"code":"1","type":"codeVoice"},{"type":"text","text":". Set this property to "},{"type":"codeVoice","code":"nil"},{"text":" to reset it to the default value.","type":"text"}]},{"inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"type":"text","text":" "},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"text":"Variable assignments and references to assigned variables","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable and\/or"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}],"type":"paragraph"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"role":"symbol","type":"topic","title":"MLNLineStyleLayer","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer","abstract":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"text":"polylines on the map.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","type":"topic","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","type":"topic","title":"lineOpacity","role":"symbol","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"fragments":[{"text":"lineOpacity","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"}}}