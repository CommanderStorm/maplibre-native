{"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"text":" * ","kind":"text"},{"text":"lineOpacity","kind":"identifier"},{"kind":"text","text":";"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"text":" ","type":"text"},{"code":"1","type":"codeVoice"},{"text":". Set this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}]},{"inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable and\/or","type":"text"},{"type":"text","text":" "},{"text":"feature attributes","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Instance Property","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","modules":[{"name":"MapLibre"}],"fragments":[{"text":"lineOpacity","kind":"identifier"}],"navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"role":"symbol","title":"lineOpacity","symbolKind":"property"},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"fragments":[{"kind":"identifier","text":"lineOpacity"}],"type":"topic","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","title":"lineOpacity"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"role":"symbol","title":"MLNLineStyleLayer","url":"\/documentation\/maplibre\/mlnlinestylelayer","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}],"abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"type":"text","text":"polylines on the map."}]}}}