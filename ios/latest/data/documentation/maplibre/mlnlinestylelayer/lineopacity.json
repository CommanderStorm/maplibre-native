{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"metadata":{"fragments":[{"text":"lineOpacity","kind":"identifier"}],"roleHeading":"Instance Property","navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"role":"symbol","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","title":"lineOpacity","symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"lineOpacity"},{"kind":"text","text":";"}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"type":"text","text":" "},{"code":"1","type":"codeVoice"},{"text":". Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" to reset it to the default value.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"type":"text","text":"Interpolation and step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable and\/or","type":"text"},{"type":"text","text":" "},{"text":"feature attributes","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"title":"MapLibre","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","type":"topic","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","kind":"symbol","title":"lineOpacity","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","role":"symbol","type":"topic","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"fragments":[{"text":"lineOpacity","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true,"type":"reference"},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"text":"polylines on the map.","type":"text"}],"fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer","type":"topic","role":"symbol","title":"MLNLineStyleLayer","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"}}}