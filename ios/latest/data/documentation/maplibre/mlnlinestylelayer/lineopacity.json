{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"kind":"text","text":" * "},{"text":"lineOpacity","kind":"identifier"},{"kind":"text","text":";"}],"platforms":["iOS"]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"text":" ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":". Set this property to "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" to reset it to the default value."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"text":" ","type":"text"},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"text":"Variable assignments and references to assigned variables","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable and\/or"},{"text":" ","type":"text"},{"text":"feature attributes","type":"text"}]}],"kind":"content"}],"metadata":{"symbolKind":"property","navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"roleHeading":"Instance Property","modules":[{"name":"MapLibre"}],"fragments":[{"text":"lineOpacity","kind":"identifier"}],"title":"lineOpacity","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","role":"symbol"},"kind":"symbol","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"url":"\/documentation\/maplibre\/mlnlinestylelayer","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","title":"MLNLineStyleLayer","kind":"symbol","role":"symbol","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"type":"topic","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true,"type":"reference"},{"type":"text","text":" is a style layer that renders one or more stroked"},{"text":" ","type":"text"},{"text":"polylines on the map.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","kind":"symbol","role":"collection","url":"\/documentation\/maplibre","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","role":"symbol","kind":"symbol","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"fragments":[{"text":"lineOpacity","kind":"identifier"}],"title":"lineOpacity","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"}}}