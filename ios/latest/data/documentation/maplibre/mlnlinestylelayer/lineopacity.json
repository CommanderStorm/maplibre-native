{"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"kind":"symbol","metadata":{"symbolKind":"property","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Property","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","navigatorTitle":[{"kind":"identifier","text":"lineOpacity"}],"role":"symbol","fragments":[{"kind":"identifier","text":"lineOpacity"}],"title":"lineOpacity"},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"kind":"typeIdentifier","text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"lineOpacity"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"text":" ","type":"text"},{"code":"1","type":"codeVoice"},{"text":". Set this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"text":" ","type":"text"},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"text":"Interpolation and step functions applied to the ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable and\/or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","title":"lineOpacity","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","role":"symbol","type":"topic","fragments":[{"text":"lineOpacity","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}],"type":"topic","title":"MLNLineStyleLayer","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","url":"\/documentation\/maplibre\/mlnlinestylelayer","role":"symbol","kind":"symbol","abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},{"text":" is a style layer that renders one or more stroked","type":"text"},{"text":" ","type":"text"},{"text":"polylines on the map.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic"}}}