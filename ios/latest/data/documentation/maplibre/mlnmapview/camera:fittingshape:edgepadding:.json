{"abstract":[{"type":"text","text":"Returns the camera that best fits the given shape with some additional padding"},{"text":" ","type":"text"},{"text":"on each side, matching an existing camera as much as possible.","type":"text"}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","interfaceLanguage":"occ"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera:","kind":"identifier"},{"kind":"text","text":"("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier","text":"MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"fittingShape:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","text":"MLNShape","preciseIdentifier":"c:objc(cs)MLNShape"},{"text":" *) ","kind":"text"},{"text":"shape","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"edgePadding:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"UIEdgeInsets","preciseIdentifier":"c:@S@UIEdgeInsets"},{"kind":"text","text":") "},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}],"type":"paragraph"}],"name":"camera"},{"name":"shape","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shape to fit to the receiver’s viewport."}]}]},{"name":"insets","content":[{"type":"paragraph","inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"type":"text","text":" "},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}]}]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A camera object centered on the shape’s center with zoom level as high","type":"text"},{"type":"text","text":" "},{"text":"(close to the ground) as possible while still including the entire shape.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The initial camera’s pitch and direction will be honored."}]}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"depending on the order of notification delivery."}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"metadata":{"modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"role":"symbol","title":"camera:fittingShape:edgePadding:","externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:","navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}]},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"text":"provided by Apple’s MapKit.","type":"text"}],"type":"topic","title":"MLNMapView","role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview","fragments":[{"kind":"identifier","text":"MLNMapView"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","title":"camera:fittingShape:edgePadding:","role":"symbol","abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on each side, matching an existing camera as much as possible."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"text":" ","type":"text"},{"text":"some point on an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"type":"text","text":"."}],"role":"symbol","title":"MLNMapCamera","fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"role":"symbol","fragments":[{"kind":"identifier","text":"MLNShape"}],"type":"topic","abstract":[{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map — not only the overlays atop the map, but also"},{"text":" ","type":"text"},{"type":"text","text":"the content that forms the base map."}],"kind":"symbol","title":"MLNShape","url":"\/documentation\/maplibre\/mlnshape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"}}}