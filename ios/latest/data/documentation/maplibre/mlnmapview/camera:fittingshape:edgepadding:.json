{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"sections":[],"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:","role":"symbol","navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"title":"camera:fittingShape:edgePadding:","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","interfaceLanguage":"occ"},"abstract":[{"type":"text","text":"Returns the camera that best fits the given shape with some additional padding"},{"text":" ","type":"text"},{"text":"on each side, matching an existing camera as much as possible.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera"},{"kind":"text","text":" *) "},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"camera"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fittingShape:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","preciseIdentifier":"c:objc(cs)MLNShape"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"shape"},{"kind":"text","text":" "},{"text":"edgePadding:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@UIEdgeInsets","text":"UIEdgeInsets","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"camera","content":[{"inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"type":"text","text":" "},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}],"type":"paragraph"}]},{"name":"shape","content":[{"type":"paragraph","inlineContent":[{"text":"The shape to fit to the receiver’s viewport.","type":"text"}]}]},{"name":"insets","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The minimum padding (in screen points) that would be visible"},{"text":" ","type":"text"},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A camera object centered on the shape’s center with zoom level as high"},{"text":" ","type":"text"},{"type":"text","text":"(close to the ground) as possible while still including the entire shape."},{"text":" ","type":"text"},{"type":"text","text":"The initial camera’s pitch and direction will be honored."}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"text":"The behavior of this method is undefined if called in response to","type":"text"},{"type":"text","text":" "},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"text":"; you may receive a ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" return value"},{"text":" ","type":"text"},{"type":"text","text":"depending on the order of notification delivery."}],"type":"paragraph"}]}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","kind":"symbol","abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"type":"text","text":" "},{"text":"on each side, matching an existing camera as much as possible.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"role":"symbol","title":"camera:fittingShape:edgePadding:","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"kind":"symbol","type":"topic","title":"MLNShape","abstract":[{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"constitute the content of a map — not only the overlays atop the map, but also"},{"type":"text","text":" "},{"text":"the content that forms the base map.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","url":"\/documentation\/maplibre\/mlnshape","fragments":[{"text":"MLNShape","kind":"identifier"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"url":"\/documentation\/maplibre\/mlnmapcamera","title":"MLNMapCamera","role":"symbol","kind":"symbol","fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"some point on an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview","type":"topic","fragments":[{"kind":"identifier","text":"MLNMapView"}],"title":"MLNMapView","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"}}}