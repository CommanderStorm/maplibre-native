{"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","interfaceLanguage":"occ"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"metadata":{"navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:","modules":[{"name":"MapLibre"}],"title":"camera:fittingShape:edgePadding:"},"abstract":[{"type":"text","text":"Returns the camera that best fits the given shape with some additional padding"},{"type":"text","text":" "},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"camera:"},{"kind":"text","text":"("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"kind":"text","text":" *) "},{"text":"camera","kind":"internalParam"},{"kind":"text","text":" "},{"text":"fittingShape:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNShape","text":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"shape"},{"text":" ","kind":"text"},{"kind":"identifier","text":"edgePadding:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@UIEdgeInsets","kind":"typeIdentifier","text":"UIEdgeInsets"},{"kind":"text","text":") "},{"kind":"internalParam","text":"insets"},{"kind":"text","text":";"}],"platforms":["iOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}],"type":"paragraph"}],"name":"camera"},{"name":"shape","content":[{"type":"paragraph","inlineContent":[{"text":"The shape to fit to the receiver’s viewport.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The minimum padding (in screen points) that would be visible"},{"text":" ","type":"text"},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}],"type":"paragraph"}],"name":"insets"}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A camera object centered on the shape’s center with zoom level as high","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(close to the ground) as possible while still including the entire shape."},{"type":"text","text":" "},{"text":"The initial camera’s pitch and direction will be honored.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"type":"text","text":" "},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"type":"text","text":"; you may receive a "},{"code":"nil","type":"codeVoice"},{"text":" return value","type":"text"},{"type":"text","text":" "},{"text":"depending on the order of notification delivery.","type":"text"}],"type":"paragraph"}],"name":"Note"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"url":"\/documentation\/maplibre\/mlnshape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"symbol","fragments":[{"kind":"identifier","text":"MLNShape"}],"title":"MLNShape","abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"text":" ","type":"text"},{"text":"constitute the content of a map — not only the overlays atop the map, but also","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the content that forms the base map."}],"type":"topic","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","title":"MapLibre","role":"collection","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"kind":"symbol","role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"title":"MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"text":"provided by Apple’s MapKit.","type":"text"}],"url":"\/documentation\/maplibre\/mlnmapview","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"role":"symbol","kind":"symbol","title":"camera:fittingShape:edgePadding:","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","abstract":[{"type":"text","text":"Returns the camera that best fits the given shape with some additional padding"},{"text":" ","type":"text"},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"text":"some point on an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","title":"MLNMapCamera","fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"role":"symbol"}}}