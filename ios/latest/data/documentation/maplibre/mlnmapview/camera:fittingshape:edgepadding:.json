{"abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"metadata":{"modules":[{"name":"MapLibre"}],"role":"symbol","title":"camera:fittingShape:edgePadding:","symbolKind":"method","navigatorTitle":[{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"roleHeading":"Instance Method"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"]}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"fittingShape:","kind":"identifier"},{"kind":"text","text":"("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","preciseIdentifier":"c:objc(cs)MLNShape","kind":"typeIdentifier","text":"MLNShape"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"shape"},{"text":" ","kind":"text"},{"text":"edgePadding:","kind":"identifier"},{"kind":"text","text":"("},{"text":"UIEdgeInsets","kind":"typeIdentifier","preciseIdentifier":"c:@S@UIEdgeInsets"},{"text":") ","kind":"text"},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}]}],"name":"camera"},{"name":"shape","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shape to fit to the receiver’s viewport."}]}]},{"name":"insets","content":[{"type":"paragraph","inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A camera object centered on the shape’s center with zoom level as high"},{"text":" ","type":"text"},{"type":"text","text":"(close to the ground) as possible while still including the entire shape."},{"text":" ","type":"text"},{"type":"text","text":"The initial camera’s pitch and direction will be honored."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"text":" ","type":"text"},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"depending on the order of notification delivery."}],"type":"paragraph"}],"name":"Note"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"abstract":[{"type":"text","text":"Returns the camera that best fits the given shape with some additional padding"},{"type":"text","text":" "},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","navigatorTitle":[{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"role":"symbol","type":"topic","title":"camera:fittingShape:edgePadding:","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"type":"text","text":"some point on an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"topic","fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"role":"symbol","title":"MLNMapCamera"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map — not only the overlays atop the map, but also"},{"type":"text","text":" "},{"text":"the content that forms the base map.","type":"text"}],"fragments":[{"text":"MLNShape","kind":"identifier"}],"role":"symbol","title":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnshape"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","url":"\/documentation\/maplibre","type":"topic","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"kind":"symbol","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","role":"symbol","url":"\/documentation\/maplibre\/mlnmapview","title":"MLNMapView","fragments":[{"kind":"identifier","text":"MLNMapView"}]}}}