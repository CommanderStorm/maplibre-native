{"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"MapLibre"}],"role":"symbol","externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:","title":"camera:fittingShape:edgePadding:"},"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","interfaceLanguage":"occ"},"primaryContentSections":[{"declarations":[{"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera:","kind":"identifier"},{"kind":"text","text":"("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"kind":"text","text":" "},{"text":"fittingShape:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","text":"MLNShape","preciseIdentifier":"c:objc(cs)MLNShape"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"shape"},{"text":" ","kind":"text"},{"text":"edgePadding:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@UIEdgeInsets","kind":"typeIdentifier","text":"UIEdgeInsets"},{"kind":"text","text":") "},{"text":"insets","kind":"internalParam"},{"kind":"text","text":";"}],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera that the return camera should adhere to. All values"},{"text":" ","type":"text"},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}]}],"name":"camera"},{"name":"shape","content":[{"inlineContent":[{"type":"text","text":"The shape to fit to the receiver’s viewport."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The minimum padding (in screen points) that would be visible"},{"text":" ","type":"text"},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}],"type":"paragraph"}],"name":"insets"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A camera object centered on the shape’s center with zoom level as high","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(close to the ground) as possible while still including the entire shape."},{"type":"text","text":" "},{"text":"The initial camera’s pitch and direction will be honored.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"content":[{"inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"type":"text","text":" "},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"depending on the order of notification delivery."}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"text":" ","type":"text"},{"text":"constitute the content of a map — not only the overlays atop the map, but also","type":"text"},{"type":"text","text":" "},{"text":"the content that forms the base map.","type":"text"}],"kind":"symbol","type":"topic","title":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","role":"symbol","url":"\/documentation\/maplibre\/mlnshape","fragments":[{"text":"MLNShape","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"abstract":[{"text":"An ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference"},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"text":" ","type":"text"},{"text":"some point on an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"topic","role":"symbol","title":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","url":"\/documentation\/maplibre\/mlnmapcamera","fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","url":"\/documentation\/maplibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"type":"topic","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","role":"symbol","title":"camera:fittingShape:edgePadding:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"role":"symbol","kind":"symbol","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"title":"MLNMapView","fragments":[{"kind":"identifier","text":"MLNMapView"}],"url":"\/documentation\/maplibre\/mlnmapview","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"topic"}}}