{"sections":[],"metadata":{"symbolKind":"method","title":"camera:fittingCoordinateBounds:edgePadding:","externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","roleHeading":"Instance Method","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"modules":[{"name":"MapLibre"}],"role":"symbol"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"]}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"camera"},{"kind":"text","text":" "},{"text":"fittingCoordinateBounds:","kind":"identifier"},{"kind":"text","text":"("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","preciseIdentifier":"c:@S@MLNCoordinateBounds","text":"MLNCoordinateBounds","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"bounds","kind":"internalParam"},{"kind":"text","text":" "},{"text":"edgePadding:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@UIEdgeInsets","kind":"typeIdentifier","text":"UIEdgeInsets"},{"kind":"text","text":") "},{"kind":"internalParam","text":"insets"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"camera","content":[{"inlineContent":[{"type":"text","text":"The camera that the return camera should adhere to. All values"},{"type":"text","text":" "},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The coordinate bounds to fit to the receiver’s viewport.","type":"text"}]}],"name":"bounds"},{"name":"insets","content":[{"inlineContent":[{"type":"text","text":"The minimum padding (in screen points) that would be visible"},{"type":"text","text":" "},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"A camera object centered on the same location as the coordinate bounds"},{"text":" ","type":"text"},{"type":"text","text":"with zoom level as high (close to the ground) as possible while still"},{"text":" ","type":"text"},{"text":"including the entire coordinate bounds. The initial camera’s pitch and","type":"text"},{"type":"text","text":" "},{"text":"direction will be honored.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"depending on the order of notification delivery."}],"type":"paragraph"}]}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"type":"text","text":" "},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","role":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"title":"camera:fittingCoordinateBounds:edgePadding:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","navigatorTitle":[{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"type":"topic","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"text":"provided by Apple’s MapKit.","type":"text"}],"title":"MLNMapView","role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"kind":"symbol","abstract":[{"text":"A rectangular area as measured on a two-dimensional map projection.","type":"text"}],"title":"MLNCoordinateBounds","role":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","fragments":[{"text":"MLNCoordinateBounds","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlncoordinatebounds"},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"type":"topic","title":"MapLibre","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"some point on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":"."}],"type":"topic","title":"MLNMapCamera","role":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"}}}