{"metadata":{"roleHeading":"Instance Method","symbolKind":"method","externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"title":"camera:fittingCoordinateBounds:edgePadding:","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"modules":[{"name":"MapLibre"}]},"abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"type":"text","text":" "},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier","text":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"camera"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fittingCoordinateBounds:"},{"kind":"text","text":"("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","kind":"typeIdentifier","preciseIdentifier":"c:@S@MLNCoordinateBounds","text":"MLNCoordinateBounds"},{"kind":"text","text":") "},{"text":"bounds","kind":"internalParam"},{"kind":"text","text":" "},{"text":"edgePadding:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@UIEdgeInsets","text":"UIEdgeInsets","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}],"type":"paragraph"}],"name":"camera"},{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The coordinate bounds to fit to the receiver’s viewport."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}]}],"name":"insets"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A camera object centered on the same location as the coordinate bounds"},{"type":"text","text":" "},{"text":"with zoom level as high (close to the ground) as possible while still","type":"text"},{"type":"text","text":" "},{"text":"including the entire coordinate bounds. The initial camera’s pitch and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"direction will be honored."}],"type":"paragraph"}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"content":[{"inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"text":" ","type":"text"},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"text":"; you may receive a ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" return value","type":"text"},{"type":"text","text":" "},{"text":"depending on the order of notification delivery.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"}],"kind":"content"}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","interfaceLanguage":"occ"},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"type":"text","text":" "},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"type":"text","text":" "},{"text":"possible.","type":"text"}],"role":"symbol","type":"topic","title":"camera:fittingCoordinateBounds:edgePadding:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","title":"MapLibre","type":"topic","url":"\/documentation\/maplibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","type":"topic","kind":"symbol","title":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"fragments":[{"text":"MLNMapView","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"text":" ","type":"text"},{"text":"some point on an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference","isActive":true},{"text":".","type":"text"}],"fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","type":"topic","title":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"fragments":[{"kind":"identifier","text":"MLNCoordinateBounds"}],"type":"topic","kind":"symbol","title":"MLNCoordinateBounds","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","role":"symbol","url":"\/documentation\/maplibre\/mlncoordinatebounds"}}}