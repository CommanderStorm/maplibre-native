{"sections":[],"abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"type":"text","text":" "},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"type":"text","text":" "},{"text":"possible.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"MLNMapCamera","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"camera:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"camera"},{"text":" ","kind":"text"},{"text":"fittingCoordinateBounds:","kind":"identifier"},{"kind":"text","text":"("},{"text":"MLNCoordinateBounds","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","kind":"typeIdentifier","preciseIdentifier":"c:@S@MLNCoordinateBounds"},{"text":") ","kind":"text"},{"text":"bounds","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"edgePadding:"},{"text":"(","kind":"text"},{"text":"UIEdgeInsets","preciseIdentifier":"c:@S@UIEdgeInsets","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"insets","kind":"internalParam"},{"kind":"text","text":";"}],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"name":"camera","content":[{"type":"paragraph","inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The coordinate bounds to fit to the receiver’s viewport."}],"type":"paragraph"}],"name":"bounds"},{"name":"insets","content":[{"inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"type":"text","text":" "},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"A camera object centered on the same location as the coordinate bounds","type":"text"},{"type":"text","text":" "},{"text":"with zoom level as high (close to the ground) as possible while still","type":"text"},{"type":"text","text":" "},{"text":"including the entire coordinate bounds. The initial camera’s pitch and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"direction will be honored."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The behavior of this method is undefined if called in response to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"text":"; you may receive a ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" return value"},{"type":"text","text":" "},{"text":"depending on the order of notification delivery.","type":"text"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"]}],"metadata":{"externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","symbolKind":"method","modules":[{"name":"MapLibre"}],"title":"camera:fittingCoordinateBounds:edgePadding:","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"type":"topic","kind":"symbol","title":"camera:fittingCoordinateBounds:edgePadding:","role":"symbol","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"type":"text","text":" "},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","role":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","title":"MLNMapCamera","abstract":[{"text":"An ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference"},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"type":"text","text":"some point on an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":"."}],"fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","title":"MapLibre","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"text":"provided by Apple’s MapKit.","type":"text"}],"title":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnmapview"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"type":"topic","fragments":[{"kind":"identifier","text":"MLNCoordinateBounds"}],"abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","title":"MLNCoordinateBounds","url":"\/documentation\/maplibre\/mlncoordinatebounds","role":"symbol"}}}