{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","symbolKind":"method","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"role":"symbol","title":"camera:fittingCoordinateBounds:edgePadding:","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","interfaceLanguage":"occ"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"kind":"text","text":" *) "},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fittingCoordinateBounds:"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","text":"MLNCoordinateBounds","preciseIdentifier":"c:@S@MLNCoordinateBounds","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"bounds","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"edgePadding:"},{"text":"(","kind":"text"},{"text":"UIEdgeInsets","preciseIdentifier":"c:@S@UIEdgeInsets","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"insets"},{"kind":"text","text":";"}],"languages":["occ"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera that the return camera should adhere to. All values"},{"text":" ","type":"text"},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}]}],"name":"camera"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The coordinate bounds to fit to the receiver’s viewport.","type":"text"}]}],"name":"bounds"},{"name":"insets","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The minimum padding (in screen points) that would be visible"},{"type":"text","text":" "},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A camera object centered on the same location as the coordinate bounds"},{"text":" ","type":"text"},{"type":"text","text":"with zoom level as high (close to the ground) as possible while still"},{"type":"text","text":" "},{"type":"text","text":"including the entire coordinate bounds. The initial camera’s pitch and"},{"type":"text","text":" "},{"text":"direction will be honored.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"type":"text","text":" "},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"text":"; you may receive a ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"type":"text","text":" "},{"text":"depending on the order of notification delivery.","type":"text"}]}]}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","title":"MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"type":"topic","url":"\/documentation\/maplibre\/mlnmapcamera","title":"MLNMapCamera","abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"some point on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","kind":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"text":" ","type":"text"},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"possible."}],"navigatorTitle":[{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"role":"symbol","title":"camera:fittingCoordinateBounds:edgePadding:","fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","title":"MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"kind":"symbol","fragments":[{"text":"MLNCoordinateBounds","kind":"identifier"}],"title":"MLNCoordinateBounds","url":"\/documentation\/maplibre\/mlncoordinatebounds","abstract":[{"text":"A rectangular area as measured on a two-dimensional map projection.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds"}}}