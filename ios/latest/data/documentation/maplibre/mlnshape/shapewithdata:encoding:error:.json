{"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","interfaceLanguage":"occ"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"metadata":{"externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","modules":[{"name":"MapLibre"}],"symbolKind":"method","roleHeading":"Type Method","title":"shapeWithData:encoding:error:","role":"symbol","fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"text":"+ (","kind":"text"},{"text":"MLNShape","preciseIdentifier":"c:objc(cs)MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"shapeWithData:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSData","preciseIdentifier":"c:objc(cs)NSData"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"data"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encoding:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding"},{"text":") ","kind":"text"},{"text":"encoding","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"error:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"NSError","preciseIdentifier":"c:objc(cs)NSError"},{"kind":"text","text":" * *) "},{"text":"outError","kind":"internalParam"},{"text":";","kind":"text"}],"platforms":["iOS"]}]},{"parameters":[{"name":"data","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"String data containing GeoJSON source code."}]}]},{"name":"encoding","content":[{"inlineContent":[{"type":"text","text":"The encoding used by "},{"code":"data","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Upon return, if an error has occurred, a pointer to an","type":"text"},{"type":"text","text":" "},{"code":"NSError","type":"codeVoice"},{"text":" object describing the error. Pass in ","type":"text"},{"type":"codeVoice","code":"NULL"},{"text":" to ignore any error.","type":"text"}],"type":"paragraph"}],"name":"outError"}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" object representation of "},{"type":"codeVoice","code":"data"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if ","type":"text"},{"code":"data","type":"codeVoice"},{"text":" could","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"type":"codeVoice","code":"nil"},{"text":", ","type":"text"},{"code":"outError","type":"codeVoice"},{"type":"text","text":" contains an"},{"type":"text","text":" "},{"code":"NSError","type":"codeVoice"},{"text":" object describing the problem.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" that conforms to the ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"text":" protocol. If it is a feature","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection object, the returned value is an instance of"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"text":".","type":"text"}],"type":"paragraph"},{"level":3,"type":"heading","text":"Example","anchor":"Example"},{"syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"],"type":"codeListing"}],"kind":"content"}],"sections":[],"abstract":[{"type":"text","text":"Returns an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"text":" object initialized with the given data interpreted as a","type":"text"},{"type":"text","text":" "},{"text":"string containing a GeoJSON object.","type":"text"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"title":"MLNShape","kind":"symbol","role":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}],"fragments":[{"kind":"identifier","text":"MLNShape"}],"type":"topic","url":"\/documentation\/maplibre\/mlnshape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"kind":"symbol","role":"symbol","type":"topic","title":"shapeWithData:encoding:error:","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"abstract":[{"type":"text","text":"Returns an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" object initialized with the given data interpreted as a"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"url":"\/documentation\/maplibre\/mlnshapecollectionfeature","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","fragments":[{"kind":"identifier","text":"MLNShapeCollectionFeature"}],"kind":"symbol","role":"symbol","type":"topic","title":"MLNShapeCollectionFeature","abstract":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"text":" object associates a shape collection with an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"optional identifier and attributes."}]}}}