{"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"MapLibre"}],"navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"roleHeading":"Type Method","fragments":[{"text":"+ ","kind":"text"},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"title":"shapeWithData:encoding:error:","symbolKind":"method","externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"abstract":[{"type":"text","text":"Returns an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" object initialized with the given data interpreted as a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}],"variants":[{"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"text":"+ (","kind":"text"},{"kind":"typeIdentifier","text":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","preciseIdentifier":"c:objc(cs)MLNShape"},{"kind":"text","text":" *) "},{"text":"shapeWithData:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)NSData","text":"NSData","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encoding:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"encoding","kind":"internalParam"},{"kind":"text","text":" "},{"text":"error:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"kind":"text","text":" * *) "},{"kind":"internalParam","text":"outError"},{"text":";","kind":"text"}],"platforms":["iOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"String data containing GeoJSON source code."}]}],"name":"data"},{"content":[{"inlineContent":[{"type":"text","text":"The encoding used by "},{"code":"data","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"encoding"},{"name":"outError","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the error. Pass in "},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" to ignore any error."}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" object representation of ","type":"text"},{"code":"data","type":"codeVoice"},{"type":"text","text":", or "},{"code":"nil","type":"codeVoice"},{"text":" if ","type":"text"},{"type":"codeVoice","code":"data"},{"text":" could","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", "},{"code":"outError","type":"codeVoice"},{"text":" contains an","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"text":" object describing the problem.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" that conforms to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"text":" protocol. If it is a feature","type":"text"},{"text":" ","type":"text"},{"text":"collection object, the returned value is an instance of","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"Example","level":3,"type":"heading","text":"Example"},{"syntax":"swift","type":"codeListing","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"]}],"kind":"content"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"url":"\/documentation\/maplibre\/mlnshapecollectionfeature","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"reference","isActive":true},{"type":"text","text":" object associates a shape collection with an"},{"type":"text","text":" "},{"text":"optional identifier and attributes.","type":"text"}],"title":"MLNShapeCollectionFeature","kind":"symbol","fragments":[{"text":"MLNShapeCollectionFeature","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"role":"symbol","type":"topic","abstract":[{"text":"Returns an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":" object initialized with the given data interpreted as a"},{"type":"text","text":" "},{"type":"text","text":"string containing a GeoJSON object."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","title":"shapeWithData:encoding:error:","navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"fragments":[{"text":"+ ","kind":"text"},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","title":"MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","fragments":[{"text":"MLNShape","kind":"identifier"}],"kind":"symbol","abstract":[{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"text":" ","type":"text"},{"type":"text","text":"the content that forms the base map."}],"title":"MLNShape","role":"symbol","url":"\/documentation\/maplibre\/mlnshape"}}}