{"metadata":{"symbolKind":"method","title":"shapeWithData:encoding:error:","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"roleHeading":"Type Method","fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","modules":[{"name":"MapLibre"}],"role":"symbol"},"kind":"symbol","abstract":[{"type":"text","text":"Returns an "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" object initialized with the given data interpreted as a"},{"type":"text","text":" "},{"text":"string containing a GeoJSON object.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","interfaceLanguage":"occ"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"variants":[{"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"],"traits":[{"interfaceLanguage":"occ"}]}],"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"+ (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNShape","text":"MLNShape","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" *) ","kind":"text"},{"text":"shapeWithData:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier","text":"NSData"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"data"},{"kind":"text","text":" "},{"text":"encoding:","kind":"identifier"},{"kind":"text","text":"("},{"text":"NSStringEncoding","preciseIdentifier":"c:@T@NSStringEncoding","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"encoding","kind":"internalParam"},{"kind":"text","text":" "},{"text":"error:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSError","preciseIdentifier":"c:objc(cs)NSError"},{"text":" * *) ","kind":"text"},{"kind":"internalParam","text":"outError"},{"kind":"text","text":";"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"String data containing GeoJSON source code."}],"type":"paragraph"}],"name":"data"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoding used by "},{"type":"codeVoice","code":"data"},{"type":"text","text":"."}]}],"name":"encoding"},{"content":[{"inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"text":" object describing the error. Pass in ","type":"text"},{"type":"codeVoice","code":"NULL"},{"text":" to ignore any error.","type":"text"}],"type":"paragraph"}],"name":"outError"}]},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" object representation of "},{"type":"codeVoice","code":"data"},{"text":", or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"data","type":"codeVoice"},{"text":" could","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"outError"},{"type":"text","text":" contains an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"text":" object describing the problem.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" that conforms to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" protocol. If it is a feature"},{"type":"text","text":" "},{"type":"text","text":"collection object, the returned value is an instance of"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true},{"type":"text","text":"."}]},{"level":3,"anchor":"Example","text":"Example","type":"heading"},{"code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"],"type":"codeListing","syntax":"swift"}]}],"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"fragments":[{"kind":"identifier","text":"MLNShape"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","title":"MLNShape","kind":"symbol","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"text":" ","type":"text"},{"text":"constitute the content of a map â€” not only the overlays atop the map, but also","type":"text"},{"type":"text","text":" "},{"text":"the content that forms the base map.","type":"text"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnshape"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"title":"MLNShapeCollectionFeature","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"MLNShapeCollectionFeature"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"topic","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true,"type":"reference"},{"type":"text","text":" object associates a shape collection with an"},{"type":"text","text":" "},{"type":"text","text":"optional identifier and attributes."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"type":"topic","url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","abstract":[{"type":"text","text":"Returns an "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" object initialized with the given data interpreted as a","type":"text"},{"type":"text","text":" "},{"text":"string containing a GeoJSON object.","type":"text"}],"fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"kind":"symbol","title":"shapeWithData:encoding:error:","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection","url":"\/documentation\/maplibre","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","kind":"symbol"}}}