{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"kind":"symbol","identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"]}],"abstract":[{"text":"Returns an ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" object initialized with the given data interpreted as a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"string containing a GeoJSON object."}],"metadata":{"modules":[{"name":"MapLibre"}],"title":"shapeWithData:encoding:error:","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"symbolKind":"method","roleHeading":"Type Method","fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"role":"symbol","externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"+ (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNShape","kind":"typeIdentifier","text":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"shapeWithData:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSData","preciseIdentifier":"c:objc(cs)NSData"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"data"},{"kind":"text","text":" "},{"text":"encoding:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding"},{"text":") ","kind":"text"},{"text":"encoding","kind":"internalParam"},{"kind":"text","text":" "},{"text":"error:","kind":"identifier"},{"kind":"text","text":"("},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"kind":"text","text":" * *) "},{"text":"outError","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"parameters":[{"name":"data","content":[{"type":"paragraph","inlineContent":[{"text":"String data containing GeoJSON source code.","type":"text"}]}]},{"name":"encoding","content":[{"type":"paragraph","inlineContent":[{"text":"The encoding used by ","type":"text"},{"type":"codeVoice","code":"data"},{"type":"text","text":"."}]}]},{"name":"outError","content":[{"inlineContent":[{"text":"Upon return, if an error has occurred, a pointer to an","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the error. Pass in "},{"type":"codeVoice","code":"NULL"},{"text":" to ignore any error.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"text":" object representation of ","type":"text"},{"code":"data","type":"codeVoice"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if ","type":"text"},{"type":"codeVoice","code":"data"},{"text":" could","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", "},{"code":"outError","type":"codeVoice"},{"text":" contains an","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"text":" object describing the problem.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":". If it is a feature object, the returned value is a kind of","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" that conforms to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" protocol. If it is a feature","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection object, the returned value is an instance of"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Example","type":"heading","level":3,"anchor":"Example"},{"syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"],"type":"codeListing"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"type":"text","text":" object associates a shape collection with an"},{"type":"text","text":" "},{"text":"optional identifier and attributes.","type":"text"}],"role":"symbol","title":"MLNShapeCollectionFeature","kind":"symbol","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","type":"topic","fragments":[{"text":"MLNShapeCollectionFeature","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"abstract":[{"type":"text","text":"Returns an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" object initialized with the given data interpreted as a"},{"type":"text","text":" "},{"type":"text","text":"string containing a GeoJSON object."}],"role":"symbol","title":"shapeWithData:encoding:error:","kind":"symbol","url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","type":"topic","fragments":[{"text":"+ ","kind":"text"},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","type":"topic","role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"title":"MLNShape","type":"topic","kind":"symbol","fragments":[{"text":"MLNShape","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","abstract":[{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"text":"constitute the content of a map â€” not only the overlays atop the map, but also","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}],"url":"\/documentation\/maplibre\/mlnshape","role":"symbol"}}}