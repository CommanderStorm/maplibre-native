{"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"]}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"metadata":{"modules":[{"name":"MapLibre"}],"fragments":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","role":"symbol","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"symbolKind":"method","title":"shapeWithData:encoding:error:","roleHeading":"Type Method"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"abstract":[{"text":"Returns an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" object initialized with the given data interpreted as a"},{"type":"text","text":" "},{"type":"text","text":"string containing a GeoJSON object."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"+ (","kind":"text"},{"text":"MLNShape","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" *) ","kind":"text"},{"text":"shapeWithData:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSData","text":"NSData","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"data","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"encoding:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"encoding"},{"kind":"text","text":" "},{"text":"error:","kind":"identifier"},{"kind":"text","text":"("},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"kind":"text","text":" * *) "},{"text":"outError","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"data","content":[{"type":"paragraph","inlineContent":[{"text":"String data containing GeoJSON source code.","type":"text"}]}]},{"name":"encoding","content":[{"type":"paragraph","inlineContent":[{"text":"The encoding used by ","type":"text"},{"type":"codeVoice","code":"data"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the error. Pass in "},{"code":"NULL","type":"codeVoice"},{"text":" to ignore any error.","type":"text"}]}],"name":"outError"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":" object representation of ","type":"text"},{"code":"data","type":"codeVoice"},{"type":"text","text":", or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if "},{"type":"codeVoice","code":"data"},{"type":"text","text":" could"},{"text":" ","type":"text"},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", "},{"code":"outError","type":"codeVoice"},{"type":"text","text":" contains an"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the problem."}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"If the GeoJSON object is a geometry, the returned value is a kind of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" that conforms to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" protocol. If it is a feature"},{"type":"text","text":" "},{"type":"text","text":"collection object, the returned value is an instance of"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"reference","isActive":true},{"type":"text","text":"."}]},{"level":3,"anchor":"Example","text":"Example","type":"heading"},{"syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"],"type":"codeListing"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"url":"\/documentation\/maplibre\/mlnshapecollectionfeature","kind":"symbol","title":"MLNShapeCollectionFeature","role":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true,"type":"reference"},{"type":"text","text":" object associates a shape collection with an"},{"text":" ","type":"text"},{"text":"optional identifier and attributes.","type":"text"}],"fragments":[{"kind":"identifier","text":"MLNShapeCollectionFeature"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"url":"\/documentation\/maplibre\/mlnshape","kind":"symbol","title":"MLNShape","role":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","abstract":[{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"text":" ","type":"text"},{"text":"constitute the content of a map â€” not only the overlays atop the map, but also","type":"text"},{"type":"text","text":" "},{"text":"the content that forms the base map.","type":"text"}],"fragments":[{"text":"MLNShape","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","type":"topic","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"type":"topic","kind":"symbol","title":"shapeWithData:encoding:error:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"fragments":[{"text":"+ ","kind":"text"},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","abstract":[{"text":"Returns an ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" object initialized with the given data interpreted as a"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}],"role":"symbol"}}}