{"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"text":") ","kind":"text"},{"text":"mapView:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"typeIdentifier","text":"MLNMapView"},{"kind":"text","text":" *) "},{"text":"mapView","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"regionDidChangeAnimated:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@T@BOOL","text":"BOOL","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"animated"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"mapView","content":[{"type":"paragraph","inlineContent":[{"text":"The map view whose viewpoint has changed.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Whether the change caused an animated effect on the map."}],"type":"paragraph"}],"name":"animated"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This method is called whenever the currently displayed map camera has finished","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"changing, after any calls to "},{"type":"codeVoice","code":"-mapViewRegionIsChanging:"},{"text":" due to animation. Therefore,","type":"text"},{"type":"text","text":" "},{"text":"this method can be called before ","type":"text"},{"type":"codeVoice","code":"-mapViewDidFinishLoadingMap:"},{"text":" is called.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Tells the delegate that the viewpoint depicted by the map view has finished"},{"text":" ","type":"text"},{"text":"changing.","type":"text"}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:regionDidChangeAnimated:"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"sections":[],"metadata":{"remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L164"},"title":"mapView:regionDidChangeAnimated:","symbolKind":"method","externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:regionDidChangeAnimated:","roleHeading":"Instance Method","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:regionDidChangeAnimated:","kind":"identifier"}],"navigatorTitle":[{"text":"mapView:regionDidChangeAnimated:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"role":"symbol"},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:regiondidchangeanimated:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:regionDidChangeAnimated:":{"title":"mapView:regionDidChangeAnimated:","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:regiondidchangeanimated:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:regionDidChangeAnimated:","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:regionDidChangeAnimated:","kind":"identifier"}],"abstract":[{"text":"Tells the delegate that the viewpoint depicted by the map view has finished","type":"text"},{"text":" ","type":"text"},{"text":"changing.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"mapView:regionDidChangeAnimated:"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","type":"topic","kind":"symbol","title":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","fragments":[{"text":"MLNMapView","kind":"identifier"}],"abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"text":" ","type":"text"},{"text":"provided by Appleâ€™s MapKit.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"kind":"symbol","title":"MLNMapViewDelegate","url":"\/documentation\/maplibre\/mlnmapviewdelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"text":" ","type":"text"},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"text":" ","type":"text"},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"text":" ","type":"text"},{"type":"text","text":"individual annotations."}],"role":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","role":"collection","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"kind":"symbol"}}}