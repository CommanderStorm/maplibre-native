{"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:regiondidchangeanimated:"]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:regionDidChangeAnimated:","interfaceLanguage":"occ"},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:regionDidChangeAnimated:"}],"remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L164"},"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:regionDidChangeAnimated:","role":"symbol","title":"mapView:regionDidChangeAnimated:","navigatorTitle":[{"kind":"identifier","text":"mapView:regionDidChangeAnimated:"}],"modules":[{"name":"MapLibre"}]},"kind":"symbol","abstract":[{"text":"Tells the delegate that the viewpoint depicted by the map view has finished","type":"text"},{"type":"text","text":" "},{"type":"text","text":"changing."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","text":"void","preciseIdentifier":"c:v"},{"text":") ","kind":"text"},{"text":"mapView:","kind":"identifier"},{"kind":"text","text":"("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapView","text":"MLNMapView"},{"kind":"text","text":" *) "},{"text":"mapView","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"regionDidChangeAnimated:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL","text":"BOOL"},{"text":") ","kind":"text"},{"text":"animated","kind":"internalParam"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"mapView","content":[{"inlineContent":[{"type":"text","text":"The map view whose viewpoint has changed."}],"type":"paragraph"}]},{"name":"animated","content":[{"type":"paragraph","inlineContent":[{"text":"Whether the change caused an animated effect on the map.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This method is called whenever the currently displayed map camera has finished","type":"text"},{"type":"text","text":" "},{"type":"text","text":"changing, after any calls to "},{"code":"-mapViewRegionIsChanging:","type":"codeVoice"},{"text":" due to animation. Therefore,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this method can be called before "},{"code":"-mapViewDidFinishLoadingMap:","type":"codeVoice"},{"type":"text","text":" is called."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:regionDidChangeAnimated:":{"type":"topic","abstract":[{"text":"Tells the delegate that the viewpoint depicted by the map view has finished","type":"text"},{"type":"text","text":" "},{"type":"text","text":"changing."}],"title":"mapView:regionDidChangeAnimated:","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:regionDidChangeAnimated:","fragments":[{"kind":"text","text":"- "},{"text":"mapView:regionDidChangeAnimated:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:regiondidchangeanimated:","kind":"symbol","navigatorTitle":[{"text":"mapView:regionDidChangeAnimated:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"text":"provided by Appleâ€™s MapKit.","type":"text"}],"title":"MLNMapView","fragments":[{"text":"MLNMapView","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","url":"\/documentation\/maplibre","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"type":"topic","abstract":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"reference"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"text":" ","type":"text"},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","role":"symbol","title":"MLNMapViewDelegate","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"kind":"symbol"}}}