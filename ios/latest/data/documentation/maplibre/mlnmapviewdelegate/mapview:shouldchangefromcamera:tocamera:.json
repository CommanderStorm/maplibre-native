{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:"]}],"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"BOOL","kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL"},{"kind":"text","text":") "},{"text":"mapView:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"mapView"},{"text":" ","kind":"text"},{"text":"shouldChangeFromCamera:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"oldCamera"},{"kind":"text","text":" "},{"kind":"identifier","text":"toCamera:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"kind":"text","text":" *) "},{"text":"newCamera","kind":"internalParam"},{"kind":"text","text":";"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The map view that the user is manipulating."}]}],"name":"mapView"},{"name":"oldCamera","content":[{"type":"paragraph","inlineContent":[{"text":"The camera representing the viewpoint at the moment the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"gesture is recognized. If this method returns "},{"code":"NO","type":"codeVoice"},{"type":"text","text":", the map view’s camera"},{"text":" ","type":"text"},{"type":"text","text":"continues to be this camera."}]}]},{"name":"newCamera","content":[{"inlineContent":[{"text":"The expected camera after the gesture completes. If this","type":"text"},{"text":" ","type":"text"},{"text":"method returns ","type":"text"},{"code":"YES","type":"codeVoice"},{"text":", this camera becomes the map view’s camera.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A Boolean value indicating whether the map view should stay at"},{"type":"text","text":" "},{"type":"codeVoice","code":"oldCamera"},{"type":"text","text":" or change to "},{"code":"newCamera","type":"codeVoice"},{"text":".","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This method is called as soon as the user gesture is recognized. It is not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"called in response to a programmatic camera change, such as by setting the"},{"type":"text","text":" "},{"code":"centerCoordinate","type":"codeVoice"},{"text":" property or calling ","type":"text"},{"code":"-flyToCamera:completionHandler:","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is called many times during gesturing, so you should avoid performing"},{"text":" ","type":"text"},{"type":"text","text":"complex or performance-intensive tasks in your implementation."}]},{"anchor":"Related-examples","type":"heading","level":4,"text":"Related examples"},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","isActive":true}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"metadata":{"title":"mapView:shouldChangeFromCamera:toCamera:","navigatorTitle":[{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:"}],"symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L50","fileName":"MLNMapViewDelegate.h"},"modules":[{"name":"MapLibre"}],"role":"symbol","externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:shouldChangeFromCamera:toCamera:","roleHeading":"Instance Method","fragments":[{"kind":"text","text":"- "},{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}]},"abstract":[{"text":"Asks the delegate whether the map view should be allowed to change from the","type":"text"},{"text":" ","type":"text"},{"text":"existing camera to the new camera in response to a user gesture.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"some point on an "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"type":"text","text":"."}],"title":"MLNMapCamera","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BlockingGesturesExample":{"url":"\/documentation\/maplibre-native-for-ios\/blockinggesturesexample","abstract":[{"type":"text","text":"Constrain the map to a certain area."}],"role":"article","title":"Blocking Gestures","type":"topic","kind":"article","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"fragments":[{"text":"MLNMapView","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","title":"MLNMapView","kind":"symbol","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:shouldChangeFromCamera:toCamera:":{"url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:","abstract":[{"type":"text","text":"Asks the delegate whether the map view should be allowed to change from the"},{"text":" ","type":"text"},{"text":"existing camera to the new camera in response to a user gesture.","type":"text"}],"navigatorTitle":[{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}],"role":"symbol","title":"mapView:shouldChangeFromCamera:toCamera:","type":"topic","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:","fragments":[{"kind":"text","text":"- "},{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","title":"MLNMapViewDelegate","abstract":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"text":" ","type":"text"},{"text":"require the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"text":" ","type":"text"},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"individual annotations."}],"kind":"symbol","type":"topic"}}}