{"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"text":"BOOL","kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL"},{"kind":"text","text":") "},{"text":"mapView:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"kind":"text","text":" *) "},{"text":"mapView","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"shouldChangeFromCamera:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"oldCamera"},{"kind":"text","text":" "},{"kind":"identifier","text":"toCamera:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"newCamera"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"mapView","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The map view that the user is manipulating."}]}]},{"name":"oldCamera","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera representing the viewpoint at the moment the"},{"type":"text","text":" "},{"type":"text","text":"gesture is recognized. If this method returns "},{"code":"NO","type":"codeVoice"},{"type":"text","text":", the map view’s camera"},{"text":" ","type":"text"},{"text":"continues to be this camera.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The expected camera after the gesture completes. If this"},{"text":" ","type":"text"},{"type":"text","text":"method returns "},{"type":"codeVoice","code":"YES"},{"type":"text","text":", this camera becomes the map view’s camera."}],"type":"paragraph"}],"name":"newCamera"}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A Boolean value indicating whether the map view should stay at"},{"text":" ","type":"text"},{"code":"oldCamera","type":"codeVoice"},{"text":" or change to ","type":"text"},{"type":"codeVoice","code":"newCamera"},{"text":".","type":"text"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This method is called as soon as the user gesture is recognized. It is not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"called in response to a programmatic camera change, such as by setting the"},{"text":" ","type":"text"},{"code":"centerCoordinate","type":"codeVoice"},{"text":" property or calling ","type":"text"},{"type":"codeVoice","code":"-flyToCamera:completionHandler:"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"This method is called many times during gesturing, so you should avoid performing"},{"type":"text","text":" "},{"text":"complex or performance-intensive tasks in your implementation.","type":"text"}],"type":"paragraph"},{"type":"heading","level":4,"text":"Related examples","anchor":"Related-examples"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","isActive":true}],"type":"paragraph"}]}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:","interfaceLanguage":"occ"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"metadata":{"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L50","fileName":"MLNMapViewDelegate.h"},"symbolKind":"method","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","title":"mapView:shouldChangeFromCamera:toCamera:","externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:shouldChangeFromCamera:toCamera:","navigatorTitle":[{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}],"fragments":[{"kind":"text","text":"- "},{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}]},"kind":"symbol","abstract":[{"text":"Asks the delegate whether the map view should be allowed to change from the","type":"text"},{"text":" ","type":"text"},{"text":"existing camera to the new camera in response to a user gesture.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:shouldChangeFromCamera:toCamera:":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:","kind":"symbol","title":"mapView:shouldChangeFromCamera:toCamera:","navigatorTitle":[{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:","role":"symbol","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:"}],"type":"topic","abstract":[{"text":"Asks the delegate whether the map view should be allowed to change from the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"existing camera to the new camera in response to a user gesture."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"url":"\/documentation\/maplibre\/mlnmapcamera","title":"MLNMapCamera","role":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"text":" ","type":"text"},{"text":"some point on an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"text":"provided by Apple’s MapKit.","type":"text"}],"title":"MLNMapView","fragments":[{"text":"MLNMapView","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"type":"topic","abstract":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"reference"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"text":" ","type":"text"},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","role":"symbol","title":"MLNMapViewDelegate","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BlockingGesturesExample":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","kind":"article","title":"Blocking Gestures","url":"\/documentation\/maplibre-native-for-ios\/blockinggesturesexample","role":"article","type":"topic","abstract":[{"type":"text","text":"Constrain the map to a certain area."}]},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","url":"\/documentation\/maplibre","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]}}}