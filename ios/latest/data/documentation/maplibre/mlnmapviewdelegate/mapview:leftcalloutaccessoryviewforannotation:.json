{"kind":"symbol","metadata":{"modules":[{"name":"MapLibre"}],"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","symbolKind":"method","title":"mapView:leftCalloutAccessoryViewForAnnotation:","roleHeading":"Instance Method","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L895","fileName":"MLNMapViewDelegate.h"},"role":"symbol"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"abstract":[{"text":"Returns the view to display on the left side of the standard callout bubble.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)UIView","text":"UIView","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"mapView:","kind":"identifier"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"typeIdentifier","text":"MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"mapView"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leftCalloutAccessoryViewForAnnotation:"},{"kind":"text","text":"("},{"text":"id<MLNAnnotation>","kind":"typeIdentifier","preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"annotation"},{"text":";","kind":"text"}]}]},{"parameters":[{"name":"mapView","content":[{"type":"paragraph","inlineContent":[{"text":"The map view presenting the annotation callout.","type":"text"}]}]},{"name":"annotation","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The object representing the annotation with the callout."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The accessory view to display.","type":"text"}]}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The left callout view is typically used to convey information about the"},{"type":"text","text":" "},{"type":"text","text":"annotation or to link to custom information provided by your application."}]},{"inlineContent":[{"text":"If the view you specify is a descendant of the ","type":"text"},{"code":"UIControl","type":"codeVoice"},{"text":" class, you can use","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the map view’s delegate to receive notifications when your control is tapped,"},{"type":"text","text":" "},{"type":"text","text":"by implementing the "},{"code":"-mapView:annotation:calloutAccessoryControlTapped:","type":"codeVoice"},{"text":" ","type":"text"},{"text":"method. If the view you specify does not descend from ","type":"text"},{"code":"UIControl","type":"codeVoice"},{"type":"text","text":", your view is"},{"type":"text","text":" "},{"text":"responsible for handling any touch events within its bounds.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this method is absent from the delegate, or if it returns "},{"code":"nil","type":"codeVoice"},{"text":", the","type":"text"},{"text":" ","type":"text"},{"text":"standard callout view has no accessory view on its left side. The return value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of this method is ignored if "},{"type":"codeVoice","code":"-mapView:calloutViewForAnnotation:"},{"type":"text","text":" is present in"},{"text":" ","type":"text"},{"type":"text","text":"the delegate."}]},{"inlineContent":[{"type":"text","text":"To display a view on the callout’s right side, implement the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-mapView:rightCalloutAccessoryViewForAnnotation:"},{"type":"text","text":" method."}],"type":"paragraph"},{"type":"heading","anchor":"Related-examples","text":"Related examples","level":4},{"inlineContent":[{"text":"TODO: Default callout usage, learn how to modify the view that is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"displayed on the left side of the standard callout bubble."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"kind":"symbol","type":"topic","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"fragments":[{"kind":"identifier","text":"MLNMapView"}],"title":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","role":"symbol","url":"\/documentation\/maplibre\/mlnmapview"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"role":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","title":"mapView:leftCalloutAccessoryViewForAnnotation:","type":"topic","abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"text":" ","type":"text"},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"text":"require the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"text":" ","type":"text"},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"type":"text","text":" "},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"kind":"symbol","title":"MLNMapViewDelegate","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","url":"\/documentation\/maplibre\/mlnmapviewdelegate","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection","kind":"symbol","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"}}}