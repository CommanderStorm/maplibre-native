{"metadata":{"title":"mapView:leftCalloutAccessoryViewForAnnotation:","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L743","fileName":"MLNMapViewDelegate.h"},"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","fragments":[{"kind":"text","text":"- "},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"role":"symbol","symbolKind":"method","navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"roleHeading":"Instance Method","modules":[{"name":"MapLibre"}]},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","interfaceLanguage":"occ"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)UIView","text":"UIView","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"mapView:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","text":"MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"mapView"},{"text":" ","kind":"text"},{"text":"leftCalloutAccessoryViewForAnnotation:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"id<MLNAnnotation>","preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"annotation"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"mapView","content":[{"inlineContent":[{"text":"The map view presenting the annotation callout.","type":"text"}],"type":"paragraph"}]},{"name":"annotation","content":[{"inlineContent":[{"text":"The object representing the annotation with the callout.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The accessory view to display."}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The left callout view is typically used to convey information about the"},{"text":" ","type":"text"},{"type":"text","text":"annotation or to link to custom information provided by your application."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the view you specify is a descendant of the "},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":" class, you can use"},{"type":"text","text":" "},{"text":"the map view’s delegate to receive notifications when your control is tapped,","type":"text"},{"text":" ","type":"text"},{"text":"by implementing the ","type":"text"},{"type":"codeVoice","code":"-mapView:annotation:calloutAccessoryControlTapped:"},{"type":"text","text":" "},{"type":"text","text":"method. If the view you specify does not descend from "},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":", your view is"},{"type":"text","text":" "},{"type":"text","text":"responsible for handling any touch events within its bounds."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If this method is absent from the delegate, or if it returns "},{"type":"codeVoice","code":"nil"},{"text":", the","type":"text"},{"type":"text","text":" "},{"text":"standard callout view has no accessory view on its left side. The return value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of this method is ignored if "},{"code":"-mapView:calloutViewForAnnotation:","type":"codeVoice"},{"type":"text","text":" is present in"},{"type":"text","text":" "},{"type":"text","text":"the delegate."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To display a view on the callout’s right side, implement the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-mapView:rightCalloutAccessoryViewForAnnotation:"},{"type":"text","text":" method."}]},{"type":"heading","anchor":"Related-examples","level":4,"text":"Related examples"},{"type":"paragraph","inlineContent":[{"text":"TODO: Default callout usage, learn how to modify the view that is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"displayed on the left side of the standard callout bubble."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"title":"mapView:leftCalloutAccessoryViewForAnnotation:","abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"kind":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","url":"\/documentation\/maplibre","role":"collection","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","url":"\/documentation\/maplibre\/mlnmapview","kind":"symbol","title":"MLNMapView","role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"type":"topic","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"url":"\/documentation\/maplibre\/mlnmapviewdelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true,"type":"reference"},{"text":" protocol defines a set of optional methods that you","type":"text"},{"text":" ","type":"text"},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"type":"text","text":" "},{"text":"require the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"text":" ","type":"text"},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"fragments":[{"kind":"identifier","text":"MLNMapViewDelegate"}],"kind":"symbol","title":"MLNMapViewDelegate"}}}