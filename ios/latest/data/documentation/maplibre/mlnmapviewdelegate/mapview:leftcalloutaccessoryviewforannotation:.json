{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"metadata":{"role":"symbol","modules":[{"name":"MapLibre"}],"remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L903"},"title":"mapView:leftCalloutAccessoryViewForAnnotation:","symbolKind":"method","externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","fragments":[{"kind":"text","text":"- "},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"]}],"kind":"symbol","abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)UIView","kind":"typeIdentifier","text":"UIView"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"mapView:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","text":"MLNMapView","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"mapView","kind":"internalParam"},{"kind":"text","text":" "},{"text":"leftCalloutAccessoryViewForAnnotation:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"id<MLNAnnotation>","preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation"},{"kind":"text","text":") "},{"text":"annotation","kind":"internalParam"},{"text":";","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The map view presenting the annotation callout."}]}],"name":"mapView"},{"name":"annotation","content":[{"inlineContent":[{"text":"The object representing the annotation with the callout.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The accessory view to display."}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The left callout view is typically used to convey information about the","type":"text"},{"type":"text","text":" "},{"text":"annotation or to link to custom information provided by your application.","type":"text"}]},{"inlineContent":[{"type":"text","text":"If the view you specify is a descendant of the "},{"type":"codeVoice","code":"UIControl"},{"text":" class, you can use","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the map view’s delegate to receive notifications when your control is tapped,"},{"text":" ","type":"text"},{"text":"by implementing the ","type":"text"},{"type":"codeVoice","code":"-mapView:annotation:calloutAccessoryControlTapped:"},{"type":"text","text":" "},{"text":"method. If the view you specify does not descend from ","type":"text"},{"code":"UIControl","type":"codeVoice"},{"type":"text","text":", your view is"},{"type":"text","text":" "},{"text":"responsible for handling any touch events within its bounds.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If this method is absent from the delegate, or if it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", the"},{"text":" ","type":"text"},{"text":"standard callout view has no accessory view on its left side. The return value","type":"text"},{"text":" ","type":"text"},{"text":"of this method is ignored if ","type":"text"},{"code":"-mapView:calloutViewForAnnotation:","type":"codeVoice"},{"type":"text","text":" is present in"},{"text":" ","type":"text"},{"type":"text","text":"the delegate."}]},{"inlineContent":[{"type":"text","text":"To display a view on the callout’s right side, implement the"},{"text":" ","type":"text"},{"code":"-mapView:rightCalloutAccessoryViewForAnnotation:","type":"codeVoice"},{"type":"text","text":" method."}],"type":"paragraph"},{"anchor":"Related-examples","type":"heading","level":4,"text":"Related examples"},{"inlineContent":[{"type":"text","text":"TODO: Default callout usage, learn how to modify the view that is"},{"type":"text","text":" "},{"text":"displayed on the left side of the standard callout bubble.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"title":"MLNMapViewDelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","abstract":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true},{"text":" protocol defines a set of optional methods that you","type":"text"},{"text":" ","type":"text"},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"type":"text","text":" "},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"type":"text","text":" "},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"type":"text","text":" "},{"text":"individual annotations.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"MLNMapViewDelegate"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"role":"symbol","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"url":"\/documentation\/maplibre\/mlnmapview","kind":"symbol","type":"topic","fragments":[{"text":"MLNMapView","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","title":"MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"type":"topic","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","role":"symbol","title":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"symbol","abstract":[{"text":"Returns the view to display on the left side of the standard callout bubble.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"role":"collection","title":"MapLibre","kind":"symbol","url":"\/documentation\/maplibre"}}}