{"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","interfaceLanguage":"occ"},"abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","text":"UIView","preciseIdentifier":"c:objc(cs)UIView"},{"text":" *) ","kind":"text"},{"text":"mapView:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","text":"MLNMapView"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"mapView"},{"kind":"text","text":" "},{"text":"leftCalloutAccessoryViewForAnnotation:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation","kind":"typeIdentifier","text":"id<MLNAnnotation>"},{"kind":"text","text":") "},{"text":"annotation","kind":"internalParam"},{"kind":"text","text":";"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The map view presenting the annotation callout."}],"type":"paragraph"}],"name":"mapView"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The object representing the annotation with the callout."}]}],"name":"annotation"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The accessory view to display."}],"type":"paragraph"}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The left callout view is typically used to convey information about the","type":"text"},{"text":" ","type":"text"},{"text":"annotation or to link to custom information provided by your application.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If the view you specify is a descendant of the ","type":"text"},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":" class, you can use"},{"type":"text","text":" "},{"type":"text","text":"the map view’s delegate to receive notifications when your control is tapped,"},{"text":" ","type":"text"},{"type":"text","text":"by implementing the "},{"type":"codeVoice","code":"-mapView:annotation:calloutAccessoryControlTapped:"},{"type":"text","text":" "},{"type":"text","text":"method. If the view you specify does not descend from "},{"code":"UIControl","type":"codeVoice"},{"text":", your view is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"responsible for handling any touch events within its bounds."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this method is absent from the delegate, or if it returns "},{"code":"nil","type":"codeVoice"},{"text":", the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"standard callout view has no accessory view on its left side. The return value"},{"type":"text","text":" "},{"text":"of this method is ignored if ","type":"text"},{"code":"-mapView:calloutViewForAnnotation:","type":"codeVoice"},{"type":"text","text":" is present in"},{"text":" ","type":"text"},{"text":"the delegate.","type":"text"}]},{"inlineContent":[{"text":"To display a view on the callout’s right side, implement the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-mapView:rightCalloutAccessoryViewForAnnotation:"},{"type":"text","text":" method."}],"type":"paragraph"},{"anchor":"Related-examples","text":"Related examples","type":"heading","level":4},{"inlineContent":[{"type":"text","text":"TODO: Default callout usage, learn how to modify the view that is"},{"text":" ","type":"text"},{"text":"displayed on the left side of the standard callout bubble.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"metadata":{"symbolKind":"method","role":"symbol","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L895"},"roleHeading":"Instance Method","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"title":"mapView:leftCalloutAccessoryViewForAnnotation:","externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","role":"symbol","url":"\/documentation\/maplibre\/mlnmapview","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","fragments":[{"kind":"identifier","text":"MLNMapView"}],"abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"title":"MLNMapView","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"title":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"symbol","navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"role":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"abstract":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true,"type":"reference"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"text":" ","type":"text"},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"type":"text","text":" "},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"individual annotations."}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"title":"MLNMapViewDelegate","kind":"symbol","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","role":"collection","url":"\/documentation\/maplibre","type":"topic","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol"}}}