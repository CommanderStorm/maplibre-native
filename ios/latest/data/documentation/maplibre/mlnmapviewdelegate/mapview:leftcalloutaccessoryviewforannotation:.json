{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIView","text":"UIView"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"mapView:"},{"kind":"text","text":"("},{"text":"MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"kind":"text","text":" *) "},{"text":"mapView","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"leftCalloutAccessoryViewForAnnotation:","kind":"identifier"},{"kind":"text","text":"("},{"text":"id<MLNAnnotation>","kind":"typeIdentifier","preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation"},{"kind":"text","text":") "},{"text":"annotation","kind":"internalParam"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The map view presenting the annotation callout."}]}],"name":"mapView"},{"content":[{"inlineContent":[{"type":"text","text":"The object representing the annotation with the callout."}],"type":"paragraph"}],"name":"annotation"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"The accessory view to display.","type":"text"}],"type":"paragraph"}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"The left callout view is typically used to convey information about the"},{"text":" ","type":"text"},{"type":"text","text":"annotation or to link to custom information provided by your application."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the view you specify is a descendant of the "},{"code":"UIControl","type":"codeVoice"},{"type":"text","text":" class, you can use"},{"text":" ","type":"text"},{"text":"the map view’s delegate to receive notifications when your control is tapped,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"by implementing the "},{"type":"codeVoice","code":"-mapView:annotation:calloutAccessoryControlTapped:"},{"text":" ","type":"text"},{"type":"text","text":"method. If the view you specify does not descend from "},{"code":"UIControl","type":"codeVoice"},{"type":"text","text":", your view is"},{"type":"text","text":" "},{"text":"responsible for handling any touch events within its bounds.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this method is absent from the delegate, or if it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", the"},{"type":"text","text":" "},{"type":"text","text":"standard callout view has no accessory view on its left side. The return value"},{"type":"text","text":" "},{"text":"of this method is ignored if ","type":"text"},{"type":"codeVoice","code":"-mapView:calloutViewForAnnotation:"},{"text":" is present in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the delegate."}]},{"inlineContent":[{"type":"text","text":"To display a view on the callout’s right side, implement the"},{"type":"text","text":" "},{"code":"-mapView:rightCalloutAccessoryViewForAnnotation:","type":"codeVoice"},{"type":"text","text":" method."}],"type":"paragraph"},{"level":4,"anchor":"Related-examples","type":"heading","text":"Related examples"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TODO: Default callout usage, learn how to modify the view that is"},{"type":"text","text":" "},{"type":"text","text":"displayed on the left side of the standard callout bubble."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:"},"metadata":{"symbolKind":"method","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"modules":[{"name":"MapLibre"}],"title":"mapView:leftCalloutAccessoryViewForAnnotation:","remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L895"},"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","roleHeading":"Instance Method","role":"symbol","navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}]},"abstract":[{"text":"Returns the view to display on the left side of the standard callout bubble.","type":"text"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","title":"MLNMapViewDelegate","url":"\/documentation\/maplibre\/mlnmapviewdelegate","type":"topic","role":"symbol","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"text":" ","type":"text"},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"require the "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"text":" ","type":"text"},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"text":" ","type":"text"},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"type":"text","text":" "},{"type":"text","text":"individual annotations."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"fragments":[{"kind":"text","text":"- "},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","title":"mapView:leftCalloutAccessoryViewForAnnotation:","abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"kind":"symbol","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"title":"MLNMapView","type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","fragments":[{"kind":"identifier","text":"MLNMapView"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"title":"MapLibre","kind":"symbol","role":"collection"}}}