{"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"BOOL","kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL"},{"kind":"text","text":") "},{"kind":"identifier","text":"mapView:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapView","text":"MLNMapView","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"kind":"text","text":" *) "},{"text":"mapView","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"shouldChangeFromCamera:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"oldCamera"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toCamera:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"newCamera","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"reason:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"MLNCameraChangeReason","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCameraChangeReason","preciseIdentifier":"c:@E@MLNCameraChangeReason"},{"text":") ","kind":"text"},{"text":"reason","kind":"internalParam"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The map view that the user is manipulating.","type":"text"}]}],"name":"mapView"},{"name":"oldCamera","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera representing the viewpoint at the moment the"},{"text":" ","type":"text"},{"type":"text","text":"gesture is recognized. If this method returns "},{"type":"codeVoice","code":"NO"},{"type":"text","text":", the map viewâ€™s camera"},{"type":"text","text":" "},{"text":"continues to be this camera.","type":"text"}]}]},{"name":"newCamera","content":[{"inlineContent":[{"type":"text","text":"The expected camera after the gesture completes. If this"},{"text":" ","type":"text"},{"type":"text","text":"method returns "},{"code":"YES","type":"codeVoice"},{"type":"text","text":", the viewport of the map will transition to the new camera. Note that the new"},{"type":"text","text":" "},{"text":"camera cannot be modified.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The reason for the camera change."}],"type":"paragraph"}],"name":"reason"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"text":"A Boolean value indicating whether the map view should stay at","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"oldCamera"},{"text":" or transition to ","type":"text"},{"type":"codeVoice","code":"newCamera"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is called as soon as the user gesture is recognized. It is not"},{"text":" ","type":"text"},{"type":"text","text":"called in response to a programmatic camera change, such as by setting the"},{"text":" ","type":"text"},{"code":"centerCoordinate","type":"codeVoice"},{"text":" property or calling ","type":"text"},{"code":"-flyToCamera:completionHandler:","type":"codeVoice"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"This method is called many times during gesturing, so you should avoid performing"},{"text":" ","type":"text"},{"text":"complex or performance-intensive tasks in your implementation.","type":"text"}],"type":"paragraph"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"If this method is implemented ","type":"text"},{"type":"codeVoice","code":"-mapView:shouldChangeFromCamera:toCamera:"},{"text":" will not be","type":"text"},{"type":"text","text":" "},{"text":"called.","type":"text"}]}],"style":"note","type":"aside"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"MapLibre"}],"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:reason:"}],"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:shouldChangeFromCamera:toCamera:reason:","navigatorTitle":[{"text":"mapView:shouldChangeFromCamera:toCamera:reason:","kind":"identifier"}],"symbolKind":"method","role":"symbol","title":"mapView:shouldChangeFromCamera:toCamera:reason:","remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L80"},"roleHeading":"Instance Method"},"abstract":[{"text":":nodoc:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Asks the delegate whether the map view should be allowed to change from the"},{"text":" ","type":"text"},{"text":"existing camera to the new camera in response to a user gesture.","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:reason:"]}],"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:reason:","interfaceLanguage":"occ"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"type":"topic","title":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"symbol","fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"type":"text","text":" "},{"text":"some point on an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/maplibre\/mlnmapcamera"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"role":"symbol","fragments":[{"kind":"identifier","text":"MLNMapViewDelegate"}],"kind":"symbol","title":"MLNMapViewDelegate","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","url":"\/documentation\/maplibre\/mlnmapviewdelegate","abstract":[{"text":"The ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"text":" protocol defines a set of optional methods that you","type":"text"},{"type":"text","text":" "},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"type":"text","text":" "},{"text":"require the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"type":"text","text":" "},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"individual annotations."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:shouldChangeFromCamera:toCamera:reason:":{"title":"mapView:shouldChangeFromCamera:toCamera:reason:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:reason:","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:shouldChangeFromCamera:toCamera:reason:","kind":"identifier"}],"abstract":[{"type":"text","text":":nodoc:"},{"type":"text","text":" "},{"text":"Asks the delegate whether the map view should be allowed to change from the","type":"text"},{"type":"text","text":" "},{"text":"existing camera to the new camera in response to a user gesture.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:reason:","navigatorTitle":[{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:reason:"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNCameraChangeReason":{"url":"\/documentation\/maplibre\/mlncamerachangereason","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCameraChangeReason","title":"MLNCameraChangeReason","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Bitmask values that describe why a camera move occurred."}],"fragments":[{"kind":"identifier","text":"MLNCameraChangeReason"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"fragments":[{"text":"MLNMapView","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview","type":"topic","title":"MLNMapView","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"text":" ","type":"text"},{"text":"provided by Appleâ€™s MapKit.","type":"text"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre"}}}