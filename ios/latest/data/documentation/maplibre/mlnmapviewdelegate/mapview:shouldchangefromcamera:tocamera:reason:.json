{"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL","text":"BOOL"},{"kind":"text","text":") "},{"kind":"identifier","text":"mapView:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapView","kind":"typeIdentifier","text":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"mapView"},{"text":" ","kind":"text"},{"text":"shouldChangeFromCamera:","kind":"identifier"},{"kind":"text","text":"("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"oldCamera"},{"text":" ","kind":"text"},{"text":"toCamera:","kind":"identifier"},{"kind":"text","text":"("},{"text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"newCamera","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"reason:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@MLNCameraChangeReason","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCameraChangeReason","text":"MLNCameraChangeReason"},{"kind":"text","text":") "},{"kind":"internalParam","text":"reason"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"mapView","content":[{"type":"paragraph","inlineContent":[{"text":"The map view that the user is manipulating.","type":"text"}]}]},{"name":"oldCamera","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera representing the viewpoint at the moment the"},{"text":" ","type":"text"},{"text":"gesture is recognized. If this method returns ","type":"text"},{"code":"NO","type":"codeVoice"},{"text":", the map view’s camera","type":"text"},{"type":"text","text":" "},{"text":"continues to be this camera.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected camera after the gesture completes. If this"},{"text":" ","type":"text"},{"type":"text","text":"method returns "},{"code":"YES","type":"codeVoice"},{"text":", the viewport of the map will transition to the new camera. Note that the new","type":"text"},{"type":"text","text":" "},{"type":"text","text":"camera cannot be modified."}]}],"name":"newCamera"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The reason for the camera change."}]}],"name":"reason"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"A Boolean value indicating whether the map view should stay at"},{"type":"text","text":" "},{"code":"oldCamera","type":"codeVoice"},{"type":"text","text":" or transition to "},{"type":"codeVoice","code":"newCamera"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is called as soon as the user gesture is recognized. It is not","type":"text"},{"text":" ","type":"text"},{"text":"called in response to a programmatic camera change, such as by setting the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"centerCoordinate"},{"text":" property or calling ","type":"text"},{"type":"codeVoice","code":"-flyToCamera:completionHandler:"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is called many times during gesturing, so you should avoid performing"},{"type":"text","text":" "},{"type":"text","text":"complex or performance-intensive tasks in your implementation."}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"If this method is implemented "},{"code":"-mapView:shouldChangeFromCamera:toCamera:","type":"codeVoice"},{"text":" will not be","type":"text"},{"type":"text","text":" "},{"text":"called.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note"}]}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"symbolKind":"method","role":"symbol","fragments":[{"kind":"text","text":"- "},{"text":"mapView:shouldChangeFromCamera:toCamera:reason:","kind":"identifier"}],"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:shouldChangeFromCamera:toCamera:reason:","title":"mapView:shouldChangeFromCamera:toCamera:reason:","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"text":"mapView:shouldChangeFromCamera:toCamera:reason:","kind":"identifier"}],"remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L79"},"roleHeading":"Instance Method"},"abstract":[{"type":"text","text":":nodoc:"},{"text":" ","type":"text"},{"text":"Asks the delegate whether the map view should be allowed to change from the","type":"text"},{"text":" ","type":"text"},{"text":"existing camera to the new camera in response to a user gesture.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:reason:"]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:reason:","interfaceLanguage":"occ"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"text":"provided by Apple’s MapKit.","type":"text"}],"title":"MLNMapView","role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"abstract":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"text":" ","type":"text"},{"type":"text","text":"require the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"text":" ","type":"text"},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"type":"text","text":" "},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","role":"symbol","kind":"symbol","title":"MLNMapViewDelegate","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:shouldChangeFromCamera:toCamera:reason:":{"abstract":[{"text":":nodoc:","type":"text"},{"text":" ","type":"text"},{"text":"Asks the delegate whether the map view should be allowed to change from the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"existing camera to the new camera in response to a user gesture."}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:reason:","role":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:shouldChangeFromCamera:toCamera:reason:","kind":"identifier"}],"title":"mapView:shouldChangeFromCamera:toCamera:reason:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:reason:","navigatorTitle":[{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:reason:"}],"type":"topic","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCameraChangeReason":{"title":"MLNCameraChangeReason","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCameraChangeReason","role":"symbol","abstract":[{"type":"text","text":"Bitmask values that describe why a camera move occurred."}],"fragments":[{"kind":"identifier","text":"MLNCameraChangeReason"}],"type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlncamerachangereason"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"some point on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":"."}],"type":"topic","title":"MLNMapCamera","role":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"type":"topic","title":"MapLibre","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","kind":"symbol"}}}