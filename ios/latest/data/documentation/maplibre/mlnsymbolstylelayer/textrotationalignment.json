{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Instance Property","title":"textRotationAlignment","externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textRotationAlignment","modules":[{"name":"MapLibre"}],"role":"symbol","fragments":[{"text":"textRotationAlignment","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"textRotationAlignment"}],"symbolKind":"property"},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textRotationAlignment","interfaceLanguage":"occ"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"text":"textRotationAlignment","kind":"identifier"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to "},{"type":"codeVoice","code":"auto"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property is only applied to the style if "},{"code":"text","type":"codeVoice"},{"text":" is non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":". Otherwise,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it is ignored."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"inlineContent":[{"type":"text","text":"Constant "},{"code":"MLNTextRotationAlignment","type":"codeVoice"},{"text":" values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Any of the following constant string values:"},{"text":" ","type":"text"},{"type":"codeVoice","code":"map"},{"type":"text","text":": When "},{"code":"symbol-placement","type":"codeVoice"},{"type":"text","text":" is set to "},{"code":"point","type":"codeVoice"},{"type":"text","text":", aligns text east-west."},{"type":"text","text":" "},{"type":"text","text":"When "},{"type":"codeVoice","code":"symbol-placement"},{"type":"text","text":" is set to "},{"code":"line","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"line-center"},{"type":"text","text":", aligns text x-axes"},{"type":"text","text":" "},{"type":"text","text":"with the line."},{"type":"text","text":" "},{"code":"viewport","type":"codeVoice"},{"type":"text","text":": Produces glyphs whose x-axes are aligned with the x-axis of the"},{"text":" ","type":"text"},{"type":"text","text":"viewport, regardless of the value of "},{"type":"codeVoice","code":"symbol-placement"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"auto"},{"type":"text","text":": When "},{"code":"symbol-placement","type":"codeVoice"},{"text":" is set to ","type":"text"},{"code":"point","type":"codeVoice"},{"text":", this is equivalent to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"viewport"},{"text":". When ","type":"text"},{"type":"codeVoice","code":"symbol-placement"},{"type":"text","text":" is set to "},{"type":"codeVoice","code":"line"},{"type":"text","text":" or "},{"code":"line-center","type":"codeVoice"},{"text":", this is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"equivalent to "},{"type":"codeVoice","code":"map"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"type":"text","text":"Step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This property does not support applying interpolation functions to the","type":"text"},{"text":" ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable or applying interpolation or step functions to feature","type":"text"},{"text":" ","type":"text"},{"text":"attributes.","type":"text"}]}],"kind":"content"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textrotationalignment"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"kind":"symbol","abstract":[{"text":"In combination with ","type":"text"},{"code":"symbolPlacement","type":"codeVoice"},{"type":"text","text":", determines the rotation behavior of the"},{"text":" ","type":"text"},{"text":"individual glyphs forming the text.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"title":"MLNSymbolStyleLayer","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","fragments":[{"text":"MLNSymbolStyleLayer","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnsymbolstylelayer","role":"symbol","abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"},{"text":" is a style layer that renders icon and text labels","type":"text"},{"text":" ","type":"text"},{"text":"at points or along lines on the map.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textRotationAlignment":{"title":"textRotationAlignment","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textRotationAlignment","url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textrotationalignment","fragments":[{"text":"textRotationAlignment","kind":"identifier"}],"abstract":[{"type":"text","text":"In combination with "},{"code":"symbolPlacement","type":"codeVoice"},{"text":", determines the rotation behavior of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"individual glyphs forming the text."}],"role":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","role":"collection","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"kind":"symbol"}}}