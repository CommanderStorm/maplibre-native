{"metadata":{"externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textRotationAlignment","symbolKind":"property","title":"textRotationAlignment","fragments":[{"text":"textRotationAlignment","kind":"identifier"}],"role":"symbol","roleHeading":"Instance Property","navigatorTitle":[{"text":"textRotationAlignment","kind":"identifier"}],"modules":[{"name":"MapLibre"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"textRotationAlignment"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to ","type":"text"},{"type":"codeVoice","code":"auto"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Set this property to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}]},{"inlineContent":[{"text":"This property is only applied to the style if ","type":"text"},{"type":"codeVoice","code":"text"},{"type":"text","text":" is non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":". Otherwise,"},{"text":" ","type":"text"},{"text":"it is ignored.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant "},{"type":"codeVoice","code":"MLNTextRotationAlignment"},{"type":"text","text":" values"},{"text":" ","type":"text"},{"type":"text","text":"Any of the following constant string values:"},{"text":" ","type":"text"},{"code":"map","type":"codeVoice"},{"text":": When ","type":"text"},{"type":"codeVoice","code":"symbol-placement"},{"text":" is set to ","type":"text"},{"type":"codeVoice","code":"point"},{"type":"text","text":", aligns text east-west."},{"type":"text","text":" "},{"type":"text","text":"When "},{"type":"codeVoice","code":"symbol-placement"},{"text":" is set to ","type":"text"},{"type":"codeVoice","code":"line"},{"text":" or ","type":"text"},{"code":"line-center","type":"codeVoice"},{"text":", aligns text x-axes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with the line."},{"text":" ","type":"text"},{"code":"viewport","type":"codeVoice"},{"type":"text","text":": Produces glyphs whose x-axes are aligned with the x-axis of the"},{"type":"text","text":" "},{"type":"text","text":"viewport, regardless of the value of "},{"type":"codeVoice","code":"symbol-placement"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"codeVoice","code":"auto"},{"text":": When ","type":"text"},{"code":"symbol-placement","type":"codeVoice"},{"text":" is set to ","type":"text"},{"type":"codeVoice","code":"point"},{"text":", this is equivalent to","type":"text"},{"text":" ","type":"text"},{"code":"viewport","type":"codeVoice"},{"text":". When ","type":"text"},{"code":"symbol-placement","type":"codeVoice"},{"type":"text","text":" is set to "},{"type":"codeVoice","code":"line"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"line-center"},{"text":", this is","type":"text"},{"type":"text","text":" "},{"text":"equivalent to ","type":"text"},{"type":"codeVoice","code":"map"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable","type":"text"}]},{"inlineContent":[{"type":"text","text":"This property does not support applying interpolation functions to the"},{"text":" ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable or applying interpolation or step functions to feature"},{"type":"text","text":" "},{"text":"attributes.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textrotationalignment"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","sections":[],"abstract":[{"text":"In combination with ","type":"text"},{"code":"symbolPlacement","type":"codeVoice"},{"text":", determines the rotation behavior of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"individual glyphs forming the text."}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textRotationAlignment"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"fragments":[{"kind":"identifier","text":"MLNSymbolStyleLayer"}],"title":"MLNSymbolStyleLayer","abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"},{"text":" is a style layer that renders icon and text labels","type":"text"},{"type":"text","text":" "},{"text":"at points or along lines on the map.","type":"text"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnsymbolstylelayer","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","type":"topic","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","kind":"symbol","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textRotationAlignment":{"url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textrotationalignment","fragments":[{"text":"textRotationAlignment","kind":"identifier"}],"abstract":[{"type":"text","text":"In combination with "},{"code":"symbolPlacement","type":"codeVoice"},{"type":"text","text":", determines the rotation behavior of the"},{"type":"text","text":" "},{"type":"text","text":"individual glyphs forming the text."}],"title":"textRotationAlignment","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textRotationAlignment","role":"symbol","kind":"symbol","type":"topic"}}}