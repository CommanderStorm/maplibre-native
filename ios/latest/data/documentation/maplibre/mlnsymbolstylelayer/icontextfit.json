{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/icontextfit"]}],"metadata":{"externalID":"c:objc(cs)MLNSymbolStyleLayer(py)iconTextFit","fragments":[{"text":"iconTextFit","kind":"identifier"}],"roleHeading":"Instance Property","title":"iconTextFit","navigatorTitle":[{"text":"iconTextFit","kind":"identifier"}],"symbolKind":"property","role":"symbol","modules":[{"name":"MapLibre"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"kind":"text","text":" * "},{"kind":"identifier","text":"iconTextFit"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to ","type":"text"},{"code":"none","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}]},{"type":"paragraph","inlineContent":[{"text":"This property is only applied to the style if ","type":"text"},{"type":"codeVoice","code":"iconImageName"},{"type":"text","text":" is non-"},{"type":"codeVoice","code":"nil"},{"text":", and","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"text"},{"text":" is non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":". Otherwise, it is ignored.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant "},{"type":"codeVoice","code":"MLNIconTextFit"},{"type":"text","text":" values"},{"text":" ","type":"text"},{"text":"Any of the following constant string values:","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"none"},{"type":"text","text":": The icon is displayed at its intrinsic aspect ratio."},{"text":" ","type":"text"},{"code":"width","type":"codeVoice"},{"type":"text","text":": The icon is scaled in the x-dimension to fit the width of the"},{"text":" ","type":"text"},{"type":"text","text":"text."},{"text":" ","type":"text"},{"type":"codeVoice","code":"height"},{"type":"text","text":": The icon is scaled in the y-dimension to fit the height of the"},{"text":" ","type":"text"},{"type":"text","text":"text."},{"text":" ","type":"text"},{"type":"codeVoice","code":"both"},{"type":"text","text":": The icon is scaled in both x- and y-dimensions."},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable","type":"text"}]},{"inlineContent":[{"text":"This property does not support applying interpolation functions to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable or applying interpolation or step functions to feature","type":"text"},{"type":"text","text":" "},{"text":"attributes.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"text":"The directions in which the icon stretches to fit around the text. If the icon","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"image is a resizable image, the resizable areas may be stretched, while the cap"},{"type":"text","text":" "},{"text":"insets are always drawn at the original scale.","type":"text"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/iconTextFit"},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/iconTextFit":{"title":"iconTextFit","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/iconTextFit","fragments":[{"kind":"identifier","text":"iconTextFit"}],"url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/icontextfit","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The directions in which the icon stretches to fit around the text. If the icon"},{"text":" ","type":"text"},{"text":"image is a resizable image, the resizable areas may be stretched, while the cap","type":"text"},{"type":"text","text":" "},{"text":"insets are always drawn at the original scale.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","type":"topic","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"url":"\/documentation\/maplibre\/mlnsymbolstylelayer","title":"MLNSymbolStyleLayer","kind":"symbol","role":"symbol","abstract":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"},{"type":"text","text":" is a style layer that renders icon and text labels"},{"type":"text","text":" "},{"type":"text","text":"at points or along lines on the map."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","fragments":[{"text":"MLNSymbolStyleLayer","kind":"identifier"}],"type":"topic"}}}