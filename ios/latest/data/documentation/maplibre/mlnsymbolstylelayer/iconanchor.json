{"metadata":{"fragments":[{"text":"iconAnchor","kind":"identifier"}],"title":"iconAnchor","role":"symbol","modules":[{"name":"MapLibre"}],"symbolKind":"property","navigatorTitle":[{"kind":"identifier","text":"iconAnchor"}],"externalID":"c:objc(cs)MLNSymbolStyleLayer(py)iconAnchor","roleHeading":"Instance Property"},"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/iconAnchor","interfaceLanguage":"occ"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"kind":"symbol","abstract":[{"type":"text","text":"Part of the icon placed closest to the anchor."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":") "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"iconAnchor"},{"kind":"text","text":";"}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to ","type":"text"},{"code":"center","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Set this property to "},{"type":"codeVoice","code":"nil"},{"text":" to reset it to the default value.","type":"text"}]},{"inlineContent":[{"text":"This property is only applied to the style if ","type":"text"},{"type":"codeVoice","code":"iconImageName"},{"type":"text","text":" is non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Otherwise, it is ignored.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Constant "},{"type":"codeVoice","code":"MLNIconAnchor"},{"type":"text","text":" values"},{"text":" ","type":"text"},{"text":"Any of the following constant string values:","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"center"},{"text":": The center of the icon is placed closest to the anchor.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"left"},{"type":"text","text":": The left side of the icon is placed closest to the anchor."},{"type":"text","text":" "},{"type":"codeVoice","code":"right"},{"type":"text","text":": The right side of the icon is placed closest to the anchor."},{"type":"text","text":" "},{"type":"codeVoice","code":"top"},{"text":": The top of the icon is placed closest to the anchor.","type":"text"},{"text":" ","type":"text"},{"code":"bottom","type":"codeVoice"},{"type":"text","text":": The bottom of the icon is placed closest to the anchor."},{"type":"text","text":" "},{"type":"codeVoice","code":"top-left"},{"type":"text","text":": The top left corner of the icon is placed closest to the"},{"type":"text","text":" "},{"type":"text","text":"anchor."},{"text":" ","type":"text"},{"type":"codeVoice","code":"top-right"},{"type":"text","text":": The top right corner of the icon is placed closest to the"},{"type":"text","text":" "},{"text":"anchor.","type":"text"},{"text":" ","type":"text"},{"code":"bottom-left","type":"codeVoice"},{"type":"text","text":": The bottom left corner of the icon is placed closest to the"},{"text":" ","type":"text"},{"type":"text","text":"anchor."},{"text":" ","type":"text"},{"code":"bottom-right","type":"codeVoice"},{"text":": The bottom right corner of the icon is placed closest to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the anchor."},{"text":" ","type":"text"},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"type":"text","text":"Interpolation and step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable and\/or"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/iconanchor"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/iconAnchor":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/iconAnchor","fragments":[{"text":"iconAnchor","kind":"identifier"}],"kind":"symbol","title":"iconAnchor","role":"symbol","abstract":[{"type":"text","text":"Part of the icon placed closest to the anchor."}],"url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/iconanchor","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","url":"\/documentation\/maplibre\/mlnsymbolstylelayer","abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"},{"type":"text","text":" is a style layer that renders icon and text labels"},{"text":" ","type":"text"},{"type":"text","text":"at points or along lines on the map."}],"role":"symbol","type":"topic","kind":"symbol","title":"MLNSymbolStyleLayer","fragments":[{"text":"MLNSymbolStyleLayer","kind":"identifier"}]}}}