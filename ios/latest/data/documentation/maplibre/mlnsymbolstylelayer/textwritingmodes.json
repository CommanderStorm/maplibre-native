{"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"metadata":{"role":"symbol","symbolKind":"property","externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textWritingModes","title":"textWritingModes","fragments":[{"kind":"identifier","text":"textWritingModes"}],"modules":[{"name":"MapLibre"}],"navigatorTitle":[{"text":"textWritingModes","kind":"identifier"}],"roleHeading":"Instance Property"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"kind":"text","text":" * "},{"kind":"identifier","text":"textWritingModes"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property is only applied to the style if "},{"type":"codeVoice","code":"text"},{"type":"text","text":" is non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", and"},{"text":" ","type":"text"},{"type":"codeVoice","code":"symbolPlacement"},{"text":" is set to an expression that evaluates to or","type":"text"},{"type":"text","text":" "},{"code":"MLNSymbolPlacementPoint","type":"codeVoice"},{"text":". Otherwise, it is ignored.","type":"text"}]},{"inlineContent":[{"text":"This attribute corresponds to the ","type":"text"},{"type":"text","text":"text-writing-mode"},{"text":" ","type":"text"},{"text":"layout property in the MapLibre Style Spec.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"type":"paragraph","inlineContent":[{"text":"Constant ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode"},{"type":"text","text":" array values"},{"type":"text","text":" "},{"text":"Constant array, in which each element is any of the following constant string","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"values:"},{"text":" ","type":"text"},{"type":"codeVoice","code":"horizontal"},{"text":": If a text’s language supports horizontal writing mode,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"symbols with point placement would be laid out horizontally."},{"type":"text","text":" "},{"code":"vertical","type":"codeVoice"},{"type":"text","text":": If a text’s language supports vertical writing mode, symbols"},{"text":" ","type":"text"},{"type":"text","text":"with point placement would be laid out vertically."},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"text":"Step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property does not support applying interpolation functions to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable or applying interpolation or step functions to feature","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"attributes."}]}],"kind":"content"}],"abstract":[{"text":"The property allows control over a symbol’s orientation. Note that the property","type":"text"},{"type":"text","text":" "},{"text":"values act as a hint, so that a symbol whose language doesn’t support the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provided orientation will be laid out in its natural orientation. Example:"},{"text":" ","type":"text"},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"type":"text","text":" "},{"type":"text","text":"single ‘vertical’ enum value. The order of elements in an array define priority"},{"type":"text","text":" "},{"text":"order for the placement of an orientation variant.","type":"text"}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","interfaceLanguage":"occ"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"title":"MLNSymbolStyleLayer","type":"topic","url":"\/documentation\/maplibre\/mlnsymbolstylelayer","abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","isActive":true},{"text":" is a style layer that renders icon and text labels","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"at points or along lines on the map."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","role":"symbol","kind":"symbol","fragments":[{"text":"MLNSymbolStyleLayer","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNTextWritingMode":{"url":"\/documentation\/maplibre\/mlntextwritingmode","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode","abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"text":" ","type":"text"},{"type":"text","text":"values act as a hint, so that a symbol whose language doesn’t support the"},{"text":" ","type":"text"},{"type":"text","text":"provided orientation will be laid out in its natural orientation. Example:"},{"type":"text","text":" "},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"type":"text","text":" "},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"type":"text","text":" "},{"type":"text","text":"order for the placement of an orientation variant."}],"title":"MLNTextWritingMode","type":"topic","fragments":[{"kind":"identifier","text":"MLNTextWritingMode"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textWritingModes":{"fragments":[{"kind":"identifier","text":"textWritingModes"}],"abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"type":"text","text":" "},{"type":"text","text":"values act as a hint, so that a symbol whose language doesn’t support the"},{"type":"text","text":" "},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"text":" ","type":"text"},{"text":"English point symbol will be rendered horizontally even if array value contains","type":"text"},{"type":"text","text":" "},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"type":"text","text":" "},{"type":"text","text":"order for the placement of an orientation variant."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","role":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes","title":"textWritingModes","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"kind":"symbol","title":"MapLibre"}}}