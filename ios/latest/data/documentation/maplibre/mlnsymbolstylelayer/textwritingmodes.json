{"variants":[{"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","interfaceLanguage":"occ"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":") "},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"textWritingModes"},{"text":";","kind":"text"}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This property is only applied to the style if "},{"type":"codeVoice","code":"text"},{"type":"text","text":" is non-"},{"code":"nil","type":"codeVoice"},{"text":", and","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"symbolPlacement"},{"type":"text","text":" is set to an expression that evaluates to or"},{"type":"text","text":" "},{"code":"MLNSymbolPlacementPoint","type":"codeVoice"},{"type":"text","text":". Otherwise, it is ignored."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This attribute corresponds to the "},{"type":"text","text":"text-writing-mode"},{"type":"text","text":" "},{"type":"text","text":"layout property in the MapLibre Style Spec."}]},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Constant ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode","isActive":true,"type":"reference"},{"type":"text","text":" array values"},{"text":" ","type":"text"},{"text":"Constant array, in which each element is any of the following constant string","type":"text"},{"type":"text","text":" "},{"type":"text","text":"values:"},{"text":" ","type":"text"},{"code":"horizontal","type":"codeVoice"},{"text":": If a text’s language supports horizontal writing mode,","type":"text"},{"type":"text","text":" "},{"text":"symbols with point placement would be laid out horizontally.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"vertical"},{"text":": If a text’s language supports vertical writing mode, symbols","type":"text"},{"type":"text","text":" "},{"text":"with point placement would be laid out vertically.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"type":"text","text":"Step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This property does not support applying interpolation functions to the","type":"text"},{"type":"text","text":" "},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable or applying interpolation or step functions to feature"},{"type":"text","text":" "},{"type":"text","text":"attributes."}]}],"kind":"content"}],"sections":[],"metadata":{"fragments":[{"text":"textWritingModes","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"textWritingModes"}],"modules":[{"name":"MapLibre"}],"roleHeading":"Instance Property","externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textWritingModes","title":"textWritingModes","symbolKind":"property"},"abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"type":"text","text":" "},{"text":"values act as a hint, so that a symbol whose language doesn’t support the","type":"text"},{"type":"text","text":" "},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"text":" ","type":"text"},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"text":" ","type":"text"},{"text":"order for the placement of an orientation variant.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","role":"collection","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textWritingModes":{"abstract":[{"text":"The property allows control over a symbol’s orientation. Note that the property","type":"text"},{"type":"text","text":" "},{"text":"values act as a hint, so that a symbol whose language doesn’t support the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provided orientation will be laid out in its natural orientation. Example:"},{"type":"text","text":" "},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"type":"text","text":" "},{"type":"text","text":"single ‘vertical’ enum value. The order of elements in an array define priority"},{"type":"text","text":" "},{"type":"text","text":"order for the placement of an orientation variant."}],"fragments":[{"kind":"identifier","text":"textWritingModes"}],"title":"textWritingModes","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes","kind":"symbol","role":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"fragments":[{"kind":"identifier","text":"MLNSymbolStyleLayer"}],"type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnsymbolstylelayer","title":"MLNSymbolStyleLayer","role":"symbol","abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"},{"text":" is a style layer that renders icon and text labels","type":"text"},{"type":"text","text":" "},{"text":"at points or along lines on the map.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"},"doc://org.swift.MyProject/documentation/MapLibre/MLNTextWritingMode":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode","abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"text":" ","type":"text"},{"type":"text","text":"values act as a hint, so that a symbol whose language doesn’t support the"},{"type":"text","text":" "},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"type":"text","text":" "},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"order for the placement of an orientation variant."}],"url":"\/documentation\/maplibre\/mlntextwritingmode","kind":"symbol","fragments":[{"kind":"identifier","text":"MLNTextWritingMode"}],"title":"MLNTextWritingMode","role":"symbol"}}}