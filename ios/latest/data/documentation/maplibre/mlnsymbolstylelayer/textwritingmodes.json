{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"kind":"text","text":" * "},{"text":"textWritingModes","kind":"identifier"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"This property is only applied to the style if "},{"type":"codeVoice","code":"text"},{"type":"text","text":" is non-"},{"code":"nil","type":"codeVoice"},{"text":", and","type":"text"},{"type":"text","text":" "},{"code":"symbolPlacement","type":"codeVoice"},{"text":" is set to an expression that evaluates to or","type":"text"},{"text":" ","type":"text"},{"code":"MLNSymbolPlacementPoint","type":"codeVoice"},{"type":"text","text":". Otherwise, it is ignored."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This attribute corresponds to the "},{"type":"text","text":"text-writing-mode"},{"text":" ","type":"text"},{"type":"text","text":"layout property in the MapLibre Style Spec."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"type":"paragraph","inlineContent":[{"text":"Constant ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode"},{"type":"text","text":" array values"},{"text":" ","type":"text"},{"text":"Constant array, in which each element is any of the following constant string","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"values:"},{"type":"text","text":" "},{"code":"horizontal","type":"codeVoice"},{"text":": If a text’s language supports horizontal writing mode,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"symbols with point placement would be laid out horizontally."},{"type":"text","text":" "},{"type":"codeVoice","code":"vertical"},{"text":": If a text’s language supports vertical writing mode, symbols","type":"text"},{"type":"text","text":" "},{"text":"with point placement would be laid out vertically.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"type":"text","text":"Step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property does not support applying interpolation functions to the"},{"type":"text","text":" "},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable or applying interpolation or step functions to feature"},{"text":" ","type":"text"},{"text":"attributes.","type":"text"}]}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","interfaceLanguage":"occ"},"variants":[{"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"fragments":[{"text":"textWritingModes","kind":"identifier"}],"role":"symbol","title":"textWritingModes","modules":[{"name":"MapLibre"}],"symbolKind":"property","roleHeading":"Instance Property","externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textWritingModes","navigatorTitle":[{"text":"textWritingModes","kind":"identifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"type":"text","text":" "},{"type":"text","text":"values act as a hint, so that a symbol whose language doesn’t support the"},{"type":"text","text":" "},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"text":" ","type":"text"},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"type":"text","text":" "},{"text":"order for the placement of an orientation variant.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textWritingModes":{"kind":"symbol","fragments":[{"text":"textWritingModes","kind":"identifier"}],"role":"symbol","title":"textWritingModes","abstract":[{"text":"The property allows control over a symbol’s orientation. Note that the property","type":"text"},{"type":"text","text":" "},{"type":"text","text":"values act as a hint, so that a symbol whose language doesn’t support the"},{"text":" ","type":"text"},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"type":"text","text":" "},{"text":"English point symbol will be rendered horizontally even if array value contains","type":"text"},{"type":"text","text":" "},{"type":"text","text":"single ‘vertical’ enum value. The order of elements in an array define priority"},{"type":"text","text":" "},{"text":"order for the placement of an orientation variant.","type":"text"}],"url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"role":"symbol","fragments":[{"text":"MLNSymbolStyleLayer","kind":"identifier"}],"kind":"symbol","title":"MLNSymbolStyleLayer","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","url":"\/documentation\/maplibre\/mlnsymbolstylelayer","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","isActive":true},{"type":"text","text":" is a style layer that renders icon and text labels"},{"type":"text","text":" "},{"text":"at points or along lines on the map.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNTextWritingMode":{"kind":"symbol","fragments":[{"text":"MLNTextWritingMode","kind":"identifier"}],"role":"symbol","title":"MLNTextWritingMode","abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"type":"text","text":" "},{"text":"values act as a hint, so that a symbol whose language doesn’t support the","type":"text"},{"text":" ","type":"text"},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"text":" ","type":"text"},{"text":"English point symbol will be rendered horizontally even if array value contains","type":"text"},{"text":" ","type":"text"},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"type":"text","text":" "},{"text":"order for the placement of an orientation variant.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode","url":"\/documentation\/maplibre\/mlntextwritingmode","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre"}}}