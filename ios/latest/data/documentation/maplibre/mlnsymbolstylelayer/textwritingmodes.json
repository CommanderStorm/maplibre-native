{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression","kind":"typeIdentifier"},{"kind":"text","text":" * "},{"kind":"identifier","text":"textWritingModes"},{"kind":"text","text":";"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This property is only applied to the style if ","type":"text"},{"type":"codeVoice","code":"text"},{"type":"text","text":" is non-"},{"code":"nil","type":"codeVoice"},{"text":", and","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"symbolPlacement"},{"text":" is set to an expression that evaluates to or","type":"text"},{"type":"text","text":" "},{"code":"MLNSymbolPlacementPoint","type":"codeVoice"},{"type":"text","text":". Otherwise, it is ignored."}]},{"inlineContent":[{"text":"This attribute corresponds to the ","type":"text"},{"text":"text-writing-mode","type":"text"},{"type":"text","text":" "},{"type":"text","text":"layout property in the MapLibre Style Spec."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"inlineContent":[{"text":"Constant ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode","isActive":true},{"text":" array values","type":"text"},{"text":" ","type":"text"},{"text":"Constant array, in which each element is any of the following constant string","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"values:"},{"text":" ","type":"text"},{"type":"codeVoice","code":"horizontal"},{"type":"text","text":": If a text’s language supports horizontal writing mode,"},{"text":" ","type":"text"},{"text":"symbols with point placement would be laid out horizontally.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"vertical"},{"text":": If a text’s language supports vertical writing mode, symbols","type":"text"},{"text":" ","type":"text"},{"text":"with point placement would be laid out vertically.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"text":"Step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property does not support applying interpolation functions to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable or applying interpolation or step functions to feature","type":"text"},{"type":"text","text":" "},{"text":"attributes.","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"property","externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textWritingModes","title":"textWritingModes","fragments":[{"text":"textWritingModes","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"navigatorTitle":[{"text":"textWritingModes","kind":"identifier"}],"role":"symbol","roleHeading":"Instance Property"},"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","interfaceLanguage":"occ"},"abstract":[{"text":"The property allows control over a symbol’s orientation. Note that the property","type":"text"},{"type":"text","text":" "},{"text":"values act as a hint, so that a symbol whose language doesn’t support the","type":"text"},{"text":" ","type":"text"},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"text":" ","type":"text"},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"type":"text","text":" "},{"type":"text","text":"order for the placement of an orientation variant."}],"variants":[{"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","fragments":[{"kind":"identifier","text":"MLNSymbolStyleLayer"}],"type":"topic","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","type":"reference","isActive":true},{"text":" is a style layer that renders icon and text labels","type":"text"},{"type":"text","text":" "},{"type":"text","text":"at points or along lines on the map."}],"url":"\/documentation\/maplibre\/mlnsymbolstylelayer","title":"MLNSymbolStyleLayer","kind":"symbol","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNTextWritingMode":{"fragments":[{"kind":"identifier","text":"MLNTextWritingMode"}],"abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"type":"text","text":" "},{"text":"values act as a hint, so that a symbol whose language doesn’t support the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provided orientation will be laid out in its natural orientation. Example:"},{"type":"text","text":" "},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"type":"text","text":" "},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"type":"text","text":" "},{"text":"order for the placement of an orientation variant.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode","url":"\/documentation\/maplibre\/mlntextwritingmode","type":"topic","role":"symbol","title":"MLNTextWritingMode"},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","kind":"symbol","url":"\/documentation\/maplibre","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textWritingModes":{"fragments":[{"kind":"identifier","text":"textWritingModes"}],"abstract":[{"text":"The property allows control over a symbol’s orientation. Note that the property","type":"text"},{"type":"text","text":" "},{"text":"values act as a hint, so that a symbol whose language doesn’t support the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided orientation will be laid out in its natural orientation. Example:"},{"type":"text","text":" "},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"text":" ","type":"text"},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"type":"text","text":" "},{"type":"text","text":"order for the placement of an orientation variant."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes","type":"topic","role":"symbol","title":"textWritingModes"}}}