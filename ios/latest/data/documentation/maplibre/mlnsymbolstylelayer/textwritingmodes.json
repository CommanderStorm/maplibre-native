{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":") "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression"},{"text":" * ","kind":"text"},{"text":"textWritingModes","kind":"identifier"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property is only applied to the style if "},{"type":"codeVoice","code":"text"},{"text":" is non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", and","type":"text"},{"text":" ","type":"text"},{"code":"symbolPlacement","type":"codeVoice"},{"text":" is set to an expression that evaluates to or","type":"text"},{"type":"text","text":" "},{"code":"MLNSymbolPlacementPoint","type":"codeVoice"},{"type":"text","text":". Otherwise, it is ignored."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This attribute corresponds to the "},{"text":"text-writing-mode","type":"text"},{"type":"text","text":" "},{"text":"layout property in the MapLibre Style Spec.","type":"text"}]},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode","isActive":true},{"text":" array values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Constant array, in which each element is any of the following constant string"},{"type":"text","text":" "},{"type":"text","text":"values:"},{"text":" ","type":"text"},{"code":"horizontal","type":"codeVoice"},{"text":": If a text’s language supports horizontal writing mode,","type":"text"},{"text":" ","type":"text"},{"text":"symbols with point placement would be laid out horizontally.","type":"text"},{"type":"text","text":" "},{"code":"vertical","type":"codeVoice"},{"type":"text","text":": If a text’s language supports vertical writing mode, symbols"},{"type":"text","text":" "},{"text":"with point placement would be laid out vertically.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"type":"text","text":"Step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable"}]},{"inlineContent":[{"type":"text","text":"This property does not support applying interpolation functions to the"},{"text":" ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable or applying interpolation or step functions to feature"},{"type":"text","text":" "},{"type":"text","text":"attributes."}],"type":"paragraph"}]}],"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes"},"abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"type":"text","text":" "},{"type":"text","text":"values act as a hint, so that a symbol whose language doesn’t support the"},{"type":"text","text":" "},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"type":"text","text":" "},{"text":"English point symbol will be rendered horizontally even if array value contains","type":"text"},{"text":" ","type":"text"},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"type":"text","text":" "},{"type":"text","text":"order for the placement of an orientation variant."}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes"]}],"metadata":{"fragments":[{"kind":"identifier","text":"textWritingModes"}],"modules":[{"name":"MapLibre"}],"navigatorTitle":[{"text":"textWritingModes","kind":"identifier"}],"symbolKind":"property","role":"symbol","title":"textWritingModes","roleHeading":"Instance Property","externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textWritingModes"},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","url":"\/documentation\/maplibre","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textWritingModes":{"type":"topic","abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"type":"text","text":" "},{"text":"values act as a hint, so that a symbol whose language doesn’t support the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided orientation will be laid out in its natural orientation. Example:"},{"type":"text","text":" "},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"type":"text","text":" "},{"type":"text","text":"single ‘vertical’ enum value. The order of elements in an array define priority"},{"type":"text","text":" "},{"type":"text","text":"order for the placement of an orientation variant."}],"url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","role":"symbol","title":"textWritingModes","fragments":[{"text":"textWritingModes","kind":"identifier"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"kind":"symbol","url":"\/documentation\/maplibre\/mlnsymbolstylelayer","role":"symbol","title":"MLNSymbolStyleLayer","fragments":[{"text":"MLNSymbolStyleLayer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"},{"type":"text","text":" is a style layer that renders icon and text labels"},{"type":"text","text":" "},{"type":"text","text":"at points or along lines on the map."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNTextWritingMode":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode","type":"topic","url":"\/documentation\/maplibre\/mlntextwritingmode","abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"text":" ","type":"text"},{"text":"values act as a hint, so that a symbol whose language doesn’t support the","type":"text"},{"text":" ","type":"text"},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"text":" ","type":"text"},{"text":"English point symbol will be rendered horizontally even if array value contains","type":"text"},{"type":"text","text":" "},{"type":"text","text":"single ‘vertical’ enum value. The order of elements in an array define priority"},{"text":" ","type":"text"},{"type":"text","text":"order for the placement of an orientation variant."}],"title":"MLNTextWritingMode","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"MLNTextWritingMode"}]}}}