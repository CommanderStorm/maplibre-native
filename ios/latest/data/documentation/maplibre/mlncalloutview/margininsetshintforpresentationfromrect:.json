{"variants":[{"paths":["\/documentation\/maplibre\/mlncalloutview\/margininsetshintforpresentationfromrect:"],"traits":[{"interfaceLanguage":"occ"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"preciseIdentifier":"c:@S@UIEdgeInsets","kind":"typeIdentifier","text":"UIEdgeInsets"},{"text":") ","kind":"text"},{"text":"marginInsetsHintForPresentationFromRect:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@CGRect","kind":"typeIdentifier","text":"CGRect"},{"kind":"text","text":") "},{"kind":"internalParam","text":"rect"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Rect that the callout is presented from. This should be the same as the one passed in","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/presentCalloutFromRect:inView:constrainedToRect:animated:","type":"reference","isActive":true}]}],"name":"rect"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"code":"UIEdgeInsets","type":"codeVoice"},{"text":" representing the margins. Values should be negative.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"These are used to determine positioning. Currently only the top and bottom properties of the return"},{"text":" ","type":"text"},{"text":"value are used. For example, ","type":"text"},{"code":"{ .top = -50.0, .left = -10.0, .bottom = 0.0, .right = -10.0 }","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"indicates a 50 point margin above the presentation origin rect (and 10 point margins to the left"},{"text":" ","type":"text"},{"type":"text","text":"and the right) in which the callout is assumed to be displayed."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"There are no assumed defaults for these margins, as they should be calculated from the callout that"},{"text":" ","type":"text"},{"text":"is to be presented. For example, ","type":"text"},{"code":"SMCalloutView","type":"codeVoice"},{"type":"text","text":" generates the top margin from the callout height,"},{"text":" ","type":"text"},{"text":"but the left and right margins from a minimum width that the callout should have.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"fragments":[{"text":"- ","kind":"text"},{"text":"marginInsetsHintForPresentationFromRect:","kind":"identifier"}],"navigatorTitle":[{"text":"marginInsetsHintForPresentationFromRect:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNCalloutView.h#L89","fileName":"MLNCalloutView.h"},"symbolKind":"method","role":"symbol","externalID":"c:objc(pl)MLNCalloutView(im)marginInsetsHintForPresentationFromRect:","roleHeading":"Instance Method","title":"marginInsetsHintForPresentationFromRect:"},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/marginInsetsHintForPresentationFromRect:","interfaceLanguage":"occ"},"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView"]]},"abstract":[{"text":"If implemented, should provide margins to expand the rect the callout is presented from.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView","url":"\/documentation\/maplibre\/mlncalloutview","fragments":[{"text":"MLNCalloutView","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol for a "},{"code":"UIView","type":"codeVoice"},{"type":"text","text":" subclass that displays information about a selected"},{"text":" ","type":"text"},{"text":"annotation near that annotation.","type":"text"}],"title":"MLNCalloutView"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView/presentCalloutFromRect:inView:constrainedToRect:animated:":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/presentCalloutFromRect:inView:constrainedToRect:animated:","url":"\/documentation\/maplibre\/mlncalloutview\/presentcalloutfromrect:inview:constrainedtorect:animated:","navigatorTitle":[{"text":"presentCalloutFromRect:inView:constrainedToRect:animated:","kind":"identifier"}],"fragments":[{"kind":"text","text":"- "},{"text":"presentCalloutFromRect:inView:constrainedToRect:animated:","kind":"identifier"}],"abstract":[{"text":"Presents a callout view by adding it to ","type":"text"},{"code":"view","type":"codeVoice"},{"type":"text","text":" and pointing at the given rect"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"view"},{"text":"â€™s bounds. Constrains the callout to the rect in the space of ","type":"text"},{"type":"codeVoice","code":"view"},{"text":".","type":"text"}],"title":"presentCalloutFromRect:inView:constrainedToRect:animated:"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","title":"MapLibre","role":"collection","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView/marginInsetsHintForPresentationFromRect:":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/marginInsetsHintForPresentationFromRect:","url":"\/documentation\/maplibre\/mlncalloutview\/margininsetshintforpresentationfromrect:","navigatorTitle":[{"kind":"identifier","text":"marginInsetsHintForPresentationFromRect:"}],"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"marginInsetsHintForPresentationFromRect:"}],"abstract":[{"type":"text","text":"If implemented, should provide margins to expand the rect the callout is presented from."}],"title":"marginInsetsHintForPresentationFromRect:"}}}