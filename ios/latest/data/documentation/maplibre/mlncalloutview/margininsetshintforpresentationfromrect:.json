{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"UIEdgeInsets","kind":"typeIdentifier","preciseIdentifier":"c:@S@UIEdgeInsets"},{"kind":"text","text":") "},{"text":"marginInsetsHintForPresentationFromRect:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@CGRect","kind":"typeIdentifier","text":"CGRect"},{"kind":"text","text":") "},{"text":"rect","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Rect that the callout is presented from. This should be the same as the one passed in"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/presentCalloutFromRect:inView:constrainedToRect:animated:"}],"type":"paragraph"}],"name":"rect"}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UIEdgeInsets"},{"type":"text","text":" representing the margins. Values should be negative."}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"These are used to determine positioning. Currently only the top and bottom properties of the return"},{"text":" ","type":"text"},{"type":"text","text":"value are used. For example, "},{"code":"{ .top = -50.0, .left = -10.0, .bottom = 0.0, .right = -10.0 }","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"indicates a 50 point margin above the presentation origin rect (and 10 point margins to the left"},{"type":"text","text":" "},{"text":"and the right) in which the callout is assumed to be displayed.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are no assumed defaults for these margins, as they should be calculated from the callout that"},{"type":"text","text":" "},{"type":"text","text":"is to be presented. For example, "},{"type":"codeVoice","code":"SMCalloutView"},{"text":" generates the top margin from the callout height,","type":"text"},{"type":"text","text":" "},{"text":"but the left and right margins from a minimum width that the callout should have.","type":"text"}]}]}],"sections":[],"variants":[{"paths":["\/documentation\/maplibre\/mlncalloutview\/margininsetshintforpresentationfromrect:"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"marginInsetsHintForPresentationFromRect:"}],"title":"marginInsetsHintForPresentationFromRect:","navigatorTitle":[{"text":"marginInsetsHintForPresentationFromRect:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"role":"symbol","externalID":"c:objc(pl)MLNCalloutView(im)marginInsetsHintForPresentationFromRect:","roleHeading":"Instance Method","symbolKind":"method","remoteSource":{"fileName":"MLNCalloutView.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNCalloutView.h#L89"}},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/marginInsetsHintForPresentationFromRect:","interfaceLanguage":"occ"},"kind":"symbol","abstract":[{"type":"text","text":"If implemented, should provide margins to expand the rect the callout is presented from."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView":{"url":"\/documentation\/maplibre\/mlncalloutview","title":"MLNCalloutView","fragments":[{"text":"MLNCalloutView","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView","abstract":[{"text":"A protocol for a ","type":"text"},{"code":"UIView","type":"codeVoice"},{"type":"text","text":" subclass that displays information about a selected"},{"type":"text","text":" "},{"text":"annotation near that annotation.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView/marginInsetsHintForPresentationFromRect:":{"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"marginInsetsHintForPresentationFromRect:"}],"navigatorTitle":[{"kind":"identifier","text":"marginInsetsHintForPresentationFromRect:"}],"url":"\/documentation\/maplibre\/mlncalloutview\/margininsetshintforpresentationfromrect:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/marginInsetsHintForPresentationFromRect:","title":"marginInsetsHintForPresentationFromRect:","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"If implemented, should provide margins to expand the rect the callout is presented from.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView/presentCalloutFromRect:inView:constrainedToRect:animated:":{"url":"\/documentation\/maplibre\/mlncalloutview\/presentcalloutfromrect:inview:constrainedtorect:animated:","kind":"symbol","abstract":[{"type":"text","text":"Presents a callout view by adding it to "},{"type":"codeVoice","code":"view"},{"type":"text","text":" and pointing at the given rect"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"view"},{"text":"â€™s bounds. Constrains the callout to the rect in the space of ","type":"text"},{"type":"codeVoice","code":"view"},{"text":".","type":"text"}],"title":"presentCalloutFromRect:inView:constrainedToRect:animated:","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"presentCalloutFromRect:inView:constrainedToRect:animated:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/presentCalloutFromRect:inView:constrainedToRect:animated:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"presentCalloutFromRect:inView:constrainedToRect:animated:"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"title":"MapLibre","type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre"}}}