{"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlocationmanager\/distancefilter"]}],"metadata":{"externalID":"c:objc(pl)MLNLocationManager(im)distanceFilter","role":"symbol","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"distanceFilter"}],"symbolKind":"method","title":"distanceFilter","roleHeading":"Instance Method","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"kind":"identifier","text":"distanceFilter"}]},"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager\/distanceFilter"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Specifies the minimum distance (measured in meters) a device must move horizontally","type":"text"},{"type":"text","text":" "},{"type":"text","text":"before a location update is generated."}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","text":"CLLocationDistance","preciseIdentifier":"c:@T@CLLocationDistance"},{"kind":"text","text":") "},{"text":"distanceFilter","kind":"identifier"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default value of this property is "},{"type":"codeVoice","code":"kCLDistanceFilterNone"},{"text":" when ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"type":"text","text":" uses its"},{"type":"text","text":" "},{"text":"default location manager.","type":"text"}]}],"kind":"content"}],"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","title":"MLNMapView","role":"symbol","fragments":[{"kind":"identifier","text":"MLNMapView"}],"kind":"symbol","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","url":"\/documentation\/maplibre\/mlnmapview"},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","role":"collection","kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLocationManager/distanceFilter":{"url":"\/documentation\/maplibre\/mlnlocationmanager\/distancefilter","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Specifies the minimum distance (measured in meters) a device must move horizontally"},{"type":"text","text":" "},{"type":"text","text":"before a location update is generated."}],"role":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"distanceFilter","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager\/distanceFilter","navigatorTitle":[{"kind":"identifier","text":"distanceFilter"}],"title":"distanceFilter"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLocationManager":{"kind":"symbol","type":"topic","abstract":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","type":"reference"},{"type":"text","text":" protocol defines a set of methods that a class must"},{"type":"text","text":" "},{"type":"text","text":"implement in order to serve as the location manager of an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"type":"text","text":". A location"},{"type":"text","text":" "},{"text":"manager is responsible for notifying the map view about location-related events,","type":"text"},{"type":"text","text":" "},{"text":"such as a change in the user’s location. This protocol is similar to the","type":"text"},{"text":" ","type":"text"},{"text":"Core Location framework’s ","type":"text"},{"type":"codeVoice","code":"CLLocationManager"},{"text":" class, but your implementation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"does not need to be based on "},{"type":"codeVoice","code":"CLLocationManager"},{"text":".","type":"text"}],"title":"MLNLocationManager","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","url":"\/documentation\/maplibre\/mlnlocationmanager","role":"symbol","fragments":[{"kind":"identifier","text":"MLNLocationManager"}]}}}