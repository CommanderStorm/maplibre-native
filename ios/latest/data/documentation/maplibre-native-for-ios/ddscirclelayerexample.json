{"variants":[{"paths":["\/documentation\/maplibre-native-for-ios\/ddscirclelayerexample"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/DDSCircleLayerExample","interfaceLanguage":"occ"},"seeAlsoSections":[{"title":"Styling and Dynamic Data","generated":true,"identifiers":["doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/AnimatedLineExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/WebAPIDataExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LineStyleLayerExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/POIAlongRouteExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/GeoJSON","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/PMTiles"]}],"abstract":[{"text":"Add and style a vector tile source","type":"text"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre"]]},"kind":"article","sections":[],"metadata":{"roleHeading":"Article","title":"Vector Tile Sources","modules":[{"name":"MapLibre"}],"role":"article"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"content","content":[{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"text":"This example uses UIKit","type":"text"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example shows how a vector data source can be added and a style for it can be configured dynamically."}]},{"type":"paragraph","inlineContent":[{"text":"The tiles are ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/maplibre\/demotiles\/tree\/gh-pages\/tiles-omt","type":"reference"},{"type":"text","text":" that use the OpenMapTiles schema. We are interested in the "},{"isActive":true,"type":"reference","identifier":"https:\/\/openmaptiles.org\/schema\/#poi"},{"type":"text","text":" that are in the "},{"code":"poi","type":"codeVoice"},{"type":"text","text":" layer, and filter this further with an "},{"code":"NSPredicate","type":"codeVoice"},{"text":" to only show POIs with a ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":" of shop. Each POI has a "},{"type":"codeVoice","code":"rank"},{"text":" which is normally used to reduce label density. In this example, we use it to demonstrate how a numeric attribute can be used for styling with the ","type":"text"},{"isActive":true,"identifier":"https:\/\/maplibre.org\/maplibre-style-spec\/expressions\/#step","type":"reference"},{"type":"text","text":" expression. POIs with a rank between 0 and 10 get a red color, between 10 and 20 green, etc."}]},{"type":"codeListing","syntax":"swift","code":["class DDSCircleLayerExample: UIViewController, MLNMapViewDelegate {","    var mapView: MLNMapView!","","    override func viewDidLoad() {","        super.viewDidLoad()","","        mapView = MLNMapView(frame: view.bounds, styleURL: AMERICANA_STYLE)","        mapView.autoresizingMask = [.flexibleWidth, .flexibleHeight]","        mapView.tintColor = .darkGray","","        \/\/ Set the mapâ€™s center coordinate and zoom level.","        let innsbruck = CLLocationCoordinate2D(latitude: 47.26497, longitude: 11.4088)","        mapView.setCenter(innsbruck, animated: false)","        mapView.zoomLevel = 14","","        mapView.delegate = self","        view.addSubview(mapView)","    }","","    \/\/ Wait until the style is loaded before modifying the map style.","    func mapView(_: MLNMapView, didFinishLoading style: MLNStyle) {","        let source = MLNVectorTileSource(identifier: \"demotiles\", configurationURL: URL(string: \"https:\/\/demotiles.maplibre.org\/tiles-omt\/tiles.json\")!)","","        style.addSource(source)","","        let layer = MLNCircleStyleLayer(identifier: \"poi-shop-style\", source: source)","","        layer.sourceLayerIdentifier = \"poi\"","        layer.predicate = NSPredicate(format: \"class == %@\", \"shop\")","","        \/\/ Style the circle layer color based on the rank","        layer.circleColor = NSExpression(mglJSONObject: [\"step\", [\"get\", \"rank\"], 0, \"red\", 10, \"green\", 20, \"blue\", 30, \"purple\", 40, \"yellow\"] as [Any])","        layer.circleRadius = NSExpression(forConstantValue: 3)","","        style.addLayer(layer)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"DDSCircleLayerExample.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Map data from OpenStreetMap. Style uses OpenMapTiles."}]}]}],"references":{"https://github.com/maplibre/demotiles/tree/gh-pages/tiles-omt":{"url":"https:\/\/github.com\/maplibre\/demotiles\/tree\/gh-pages\/tiles-omt","type":"link","identifier":"https:\/\/github.com\/maplibre\/demotiles\/tree\/gh-pages\/tiles-omt","title":"tiles around Innsbruck, Austria","titleInlineContent":[{"text":"tiles around Innsbruck, Austria","type":"text"}]},"https://openmaptiles.org/schema/#poi":{"url":"https:\/\/openmaptiles.org\/schema\/#poi","title":"POIs","type":"link","titleInlineContent":[{"type":"text","text":"POIs"}],"identifier":"https:\/\/openmaptiles.org\/schema\/#poi"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"url":"\/documentation\/maplibre\/mlnlinestylelayer","title":"MLNLineStyleLayer","type":"topic","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","role":"symbol","abstract":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"reference"},{"type":"text","text":" is a style layer that renders one or more stroked"},{"text":" ","type":"text"},{"type":"text","text":"polylines on the map."}],"fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}]},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/POIAlongRouteExample":{"url":"\/documentation\/maplibre-native-for-ios\/poialongrouteexample","title":"POI Along a Route","type":"topic","kind":"article","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/POIAlongRouteExample","abstract":[{"type":"text","text":"Use an "},{"type":"codeVoice","code":"NSPredicate"},{"type":"text","text":" to show POI and road labels along a route."}],"role":"article"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/GeoJSON":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/GeoJSON","role":"article","kind":"article","url":"\/documentation\/maplibre-native-for-ios\/geojson","title":"Working with GeoJSON Data","abstract":[]},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"title":"MapLibre","type":"topic","kind":"symbol","url":"\/documentation\/maplibre","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/AnimatedLineExample":{"url":"\/documentation\/maplibre-native-for-ios\/animatedlineexample","title":"Animated Line","type":"topic","kind":"article","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/AnimatedLineExample","abstract":[{"type":"text","text":"Add an animated line to a map"}],"role":"article"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/PMTiles":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/PMTiles","role":"article","kind":"article","url":"\/documentation\/maplibre-native-for-ios\/pmtiles","title":"PMTiles","abstract":[{"type":"text","text":"Working with PMTiles"}]},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/WebAPIDataExample":{"url":"\/documentation\/maplibre-native-for-ios\/webapidataexample","title":"Showing data from an API","type":"topic","kind":"article","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/WebAPIDataExample","abstract":[{"type":"text","text":"Showing data from an API with custom styling and interaction"}],"role":"article"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/LineStyleLayerExample":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LineStyleLayerExample","role":"article","kind":"article","url":"\/documentation\/maplibre-native-for-ios\/linestylelayerexample","title":"Using GeoJSON with a line style layer","abstract":[{"type":"text","text":"Adding an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},{"type":"text","text":" to the map using a GeoJSON file."}]},"DDSCircleLayerExample.png":{"alt":null,"type":"image","identifier":"DDSCircleLayerExample.png","variants":[{"url":"\/images\/DDSCircleLayerExample@2x.png","traits":["2x","light"]}]},"https://maplibre.org/maplibre-style-spec/expressions/#step":{"url":"https:\/\/maplibre.org\/maplibre-style-spec\/expressions\/#step","title":"step","type":"link","titleInlineContent":[{"type":"text","text":"step"}],"identifier":"https:\/\/maplibre.org\/maplibre-style-spec\/expressions\/#step"}}}